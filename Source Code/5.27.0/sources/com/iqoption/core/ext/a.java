package com.iqoption.core.ext;

import android.animation.Animator;
import android.app.Application;
import android.app.DownloadManager;
import android.app.NotificationManager;
import android.content.Context;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.content.res.ColorStateList;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.Color;
import android.graphics.Matrix;
import android.graphics.Point;
import android.graphics.Rect;
import android.graphics.Typeface;
import android.graphics.drawable.Drawable;
import android.net.ConnectivityManager;
import android.os.Build.VERSION;
import android.os.Bundle;
import android.os.Looper;
import android.os.Parcel;
import android.os.Parcelable;
import android.provider.Settings.Global;
import android.text.InputFilter;
import android.util.DisplayMetrics;
import android.util.TypedValue;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewTreeObserver.OnGlobalLayoutListener;
import android.widget.EditText;
import android.widget.FrameLayout.LayoutParams;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.AttrRes;
import androidx.annotation.ColorInt;
import androidx.annotation.ColorRes;
import androidx.annotation.DimenRes;
import androidx.annotation.DrawableRes;
import androidx.annotation.FontRes;
import androidx.core.content.ContextCompat;
import androidx.core.content.res.ResourcesCompat;
import androidx.core.graphics.drawable.DrawableCompat;
import androidx.core.widget.ImageViewCompat;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.fragment.app.Fragment;
import androidx.fragment.app.FragmentActivity;
import androidx.fragment.app.FragmentManager;
import androidx.lifecycle.AndroidViewModel;
import androidx.lifecycle.MutableLiveData;
import androidx.lifecycle.ViewModel;
import androidx.recyclerview.widget.DefaultItemAnimator;
import androidx.recyclerview.widget.RecyclerView;
import androidx.recyclerview.widget.RecyclerView.ItemAnimator;
import androidx.recyclerview.widget.RecyclerView.ViewHolder;
import com.google.android.gms.common.internal.ServiceSpecificExtraArgs.CastExtraArgs;
import com.iqoption.core.d;
import com.iqoption.core.data.b.c;
import java.util.Collection;
import java.util.Iterator;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import kotlin.TypeCastException;
import kotlin.i;
import kotlin.l;

@i(bne = {1, 1, 15}, bnf = {"\u0000\u0004\n\u0000\n\u0002\u0010\b\n\u0000\n\u0002\u0010\t\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\b\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\t\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0011\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0007\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0010\u000b\n\u0000\n\u0002\u0010\u000e\n\u0002\b\n\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0006\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0003\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\n\n\u0002\u0018\u0002\n\u0002\b\u0005\n\u0002\u0010\u0010\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0012\n\u0002\u0010\u0011\n\u0002\b\u0015\n\u0002\u0010\u0015\n\u0002\b\b\n\u0002\u0018\u0002\n\u0002\b\t\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0010 \n\u0000\n\u0002\u0010\"\n\u0002\b\u000b\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0002\n\u0002\u0018\u0002\n\u0002\b\u0016\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0010$\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\u0011\u001a/\u0010b\u001a\u00020c2\u0006\u0010d\u001a\u00020\u00012\u0006\u0010e\u001a\u00020\u00012\u0017\u0010f\u001a\u0013\u0012\u0004\u0012\u00020g\u0012\u0004\u0012\u00020\u00070\u0005¢\u0006\u0002\bh\u001a\u000e\u0010i\u001a\u00020\u00012\u0006\u0010\u0016\u001a\u00020j\u001a\u001a\u0010k\u001a\u00020\u00012\b\b\u0002\u0010l\u001a\u00020#2\b\b\u0002\u0010m\u001a\u00020n\u001a\u001a\u0010o\u001a\u00020n2\b\b\u0002\u0010l\u001a\u00020#2\b\b\u0002\u0010m\u001a\u00020n\u001a\u001a\u0010p\u001a\u00020\u00012\b\b\u0002\u0010l\u001a\u00020#2\b\b\u0002\u0010m\u001a\u00020n\u001a$\u0010q\u001a\u00020r2\b\b\u0002\u0010s\u001a\u00020\u00012\b\b\u0002\u0010t\u001a\u00020\u00012\b\b\u0002\u0010u\u001a\u00020\u0001\u001a$\u0010v\u001a\u00020w2\b\b\u0002\u0010s\u001a\u00020\u00012\b\b\u0002\u0010t\u001a\u00020\u00012\b\b\u0002\u0010x\u001a\u00020j\u001a.\u0010y\u001a\u0002Hz\"\n\b\u0000\u0010z\u0018\u0001*\u00020{2\u0006\u0010|\u001a\u00020\u00062\n\b\u0002\u0010}\u001a\u0004\u0018\u00010~H\b¢\u0006\u0002\u0010\u001a0\u0010y\u001a\u0002Hz\"\n\b\u0000\u0010z\u0018\u0001*\u00020{2\u0007\u0010\u0001\u001a\u00020\u000f2\n\b\u0002\u0010}\u001a\u0004\u0018\u00010~H\b¢\u0006\u0003\u0010\u0001\u001a\u0012\u0010\u0001\u001a\u00030\u00012\b\u0010\u0001\u001a\u00030\u0001\u001a\u000b\u0010\u0001\u001a\u00030\u0001H\b\u001a\u000b\u0010\u0001\u001a\u00030\u0001H\b\u001a\b\u0010\u0001\u001a\u00030\u0001\u001a\u000b\u0010\u0001\u001a\u00030\u0001H\b\u001a\u000b\u0010\u0001\u001a\u00030\u0001H\b\u001a\u000b\u0010\u0001\u001a\u00030\u0001H\b\u001a\u0019\u0010\u0001\u001a\u00020\u00012\u0007\u0010\u0001\u001a\u00020\u00012\u0007\u0010\u0001\u001a\u00020\u0001\u001a#\u0010\u0001\u001a\t\u0012\u0004\u0012\u0002Hz0\u0001\"\u0004\b\u0000\u0010z2\u0007\u0010\u0001\u001a\u0002Hz¢\u0006\u0003\u0010\u0001\u001a#\u0010\u0001\u001a\t\u0012\u0004\u0012\u0002Hz0\u0001\"\u0004\b\u0000\u0010z2\u0007\u0010\u0001\u001a\u0002Hz¢\u0006\u0003\u0010\u0001\u001a\u0016\u0010\u0001\u001a\u00020\u0007*\u00030\u00012\b\u0010\u0001\u001a\u00030\u0001\u001a\u000b\u0010\u0001\u001a\u00020\u0001*\u00020\u0001\u001a\u0016\u0010\u0001\u001a\u00030\u0001*\u00020\u00012\b\b\u0002\u0010&\u001a\u00020#\u001a\u0016\u0010\u0001\u001a\u00030\u0001*\u00020\u00012\b\u0010\u0001\u001a\u00030\u0001\u001a\u000b\u0010\u0001\u001a\u00020\u0007*\u00020E\u001a\u000b\u0010 \u0001\u001a\u00020\u0007*\u00020E\u001a\u000b\u0010¡\u0001\u001a\u00020\u0007*\u00020\u0019\u001a\u0018\u0010¢\u0001\u001a\u00020\u0001*\u00020#2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001H\u0007\u001a\u0017\u0010¤\u0001\u001a\u00030¥\u0001*\u00020#2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a5\u0010¦\u0001\u001a\u00020\u0007*\u0002042\n\b\u0002\u0010§\u0001\u001a\u00030\u00012\u0019\u0010¨\u0001\u001a\u0014\u0012\u0005\u0012\u00030©\u0001\u0012\u0004\u0012\u00020\u00070\u0005¢\u0006\u0002\bhH\b\u001a5\u0010ª\u0001\u001a\u00020\u0007*\u0002042\n\b\u0002\u0010§\u0001\u001a\u00030\u00012\u0019\u0010¨\u0001\u001a\u0014\u0012\u0005\u0012\u00030©\u0001\u0012\u0004\u0012\u00020\u00070\u0005¢\u0006\u0002\bhH\b\u001a\u000f\u0010«\u0001\u001a\u00020\u0001*\u00030¬\u0001H\u0002\u001a\u000f\u0010«\u0001\u001a\u00020j*\u00030­\u0001H\u0002\u001a\u000e\u0010«\u0001\u001a\u00020\u0001*\u00020nH\u0002\u001a\u000e\u0010«\u0001\u001a\u00020\u0001*\u00020\u0001H\u0002\u001a\u000e\u0010«\u0001\u001a\u00020\u0003*\u00020\u0003H\u0002\u001a\u000f\u0010®\u0001\u001a\u00020\u0001*\u00030¬\u0001H\u0002\u001a\u000f\u0010®\u0001\u001a\u00020j*\u00030­\u0001H\u0002\u001a\u000e\u0010®\u0001\u001a\u00020\u0001*\u00020nH\u0002\u001a\u000e\u0010®\u0001\u001a\u00020\u0001*\u00020\u0001H\u0002\u001a\u000e\u0010®\u0001\u001a\u00020\u0003*\u00020\u0003H\u0002\u001a\u000f\u0010¯\u0001\u001a\u00020\u0001*\u00030¬\u0001H\u0002\u001a\u000f\u0010¯\u0001\u001a\u00020j*\u00030­\u0001H\u0002\u001a\u000e\u0010¯\u0001\u001a\u00020\u0001*\u00020\u0001H\u0002\u001a\u000e\u0010¯\u0001\u001a\u00020\u0003*\u00020\u0003H\u0002\u001a\u000f\u0010°\u0001\u001a\u00020\u0001*\u00030¬\u0001H\u0002\u001a\u000f\u0010°\u0001\u001a\u00020j*\u00030­\u0001H\u0002\u001a\u000e\u0010°\u0001\u001a\u00020\u0001*\u00020\u0001H\u0002\u001a\u000e\u0010°\u0001\u001a\u00020\u0003*\u00020\u0003H\u0002\u001a\f\u0010l\u001a\u00030±\u0001*\u00030²\u0001\u001a\u0015\u0010³\u0001\u001a\u00020\u0007*\u00020E2\b\u0010´\u0001\u001a\u00030\u0001\u001a\f\u0010µ\u0001\u001a\u00020\u0007*\u00030¶\u0001\u001a3\u0010·\u0001\u001a\u00020\u0007*\u00020F2\u0011\b\u0004\u0010¸\u0001\u001a\n\u0012\u0005\u0012\u00030\u00010¹\u00012\u0010\b\u0004\u0010º\u0001\u001a\t\u0012\u0004\u0012\u00020\u00070¹\u0001H\b\u001a \u0010·\u0001\u001a\u00020\u0007*\u00020F2\u0010\b\u0004\u0010º\u0001\u001a\t\u0012\u0004\u0012\u00020\u00070¹\u0001H\b\u001a!\u0010»\u0001\u001a\u00020\u0007*\u00020F2\u0011\b\u0004\u0010º\u0001\u001a\n\u0012\u0005\u0012\u00030\u00010¹\u0001H\b\u001a4\u0010»\u0001\u001a\u00020\u0007*\u00020F2\u0011\b\u0004\u0010¸\u0001\u001a\n\u0012\u0005\u0012\u00030\u00010¹\u00012\u0011\b\u0004\u0010º\u0001\u001a\n\u0012\u0005\u0012\u00030\u00010¹\u0001H\b\u001a \u0010¼\u0001\u001a\u00020\u0007*\u00020F2\u0010\b\u0004\u0010º\u0001\u001a\t\u0012\u0004\u0012\u00020\u00070¹\u0001H\b\u001a\u0016\u0010½\u0001\u001a\u00020\u0017*\u00020#2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a+\u0010¾\u0001\u001a\u00020\u0007*\u00030¿\u00012\u001a\u0010¨\u0001\u001a\u0015\u0012\u0005\u0012\u00030À\u0001\u0012\u0005\u0012\u00030À\u00010\u0005¢\u0006\u0002\bhH\b\u001a\u000b\u0010Á\u0001\u001a\u00020\u0007*\u00020F\u001a\u000b\u0010Â\u0001\u001a\u00020\u0007*\u00020F\u001a\u0015\u0010Ã\u0001\u001a\u00020\u0007*\u00020E2\b\u0010´\u0001\u001a\u00030\u0001\u001a\u001c\u0010Ä\u0001\u001a\u0002Hz\"\t\b\u0000\u0010z*\u00030Å\u0001*\u00020F¢\u0006\u0003\u0010Æ\u0001\u001a\u001d\u0010Ç\u0001\u001a\u000204*\u00020\u00062\u0010\u0010È\u0001\u001a\u000b\u0012\u0006\b\u0001\u0012\u00020\u00060É\u0001\u001a/\u0010Ê\u0001\u001a\u0004\u0018\u0001Hz\"\b\b\u0000\u0010z*\u00020\u0006*\u00020\u00062\u0010\u0010È\u0001\u001a\u000b\u0012\u0006\b\u0001\u0012\u0002Hz0É\u0001¢\u0006\u0003\u0010Ë\u0001\u001a\u001d\u0010Ì\u0001\u001a\u000204*\u00020\u00062\u0010\u0010È\u0001\u001a\u000b\u0012\u0006\b\u0001\u0012\u00020\u00060É\u0001\u001a-\u0010Í\u0001\u001a\u0002Hz\"\b\b\u0000\u0010z*\u00020\u0006*\u00020\u00062\u0010\u0010È\u0001\u001a\u000b\u0012\u0006\b\u0001\u0012\u0002Hz0É\u0001¢\u0006\u0003\u0010Ë\u0001\u001a/\u0010Î\u0001\u001a\u0004\u0018\u0001Hz\"\b\b\u0000\u0010z*\u00020\u0006*\u00020\u00062\u0010\u0010È\u0001\u001a\u000b\u0012\u0006\b\u0001\u0012\u0002Hz0É\u0001¢\u0006\u0003\u0010Ë\u0001\u001a/\u0010Ï\u0001\u001a\u0004\u0018\u0001Hz\"\b\b\u0000\u0010z*\u00020\u0006*\u00020\u00062\u0010\u0010È\u0001\u001a\u000b\u0012\u0006\b\u0001\u0012\u0002Hz0É\u0001¢\u0006\u0003\u0010Ë\u0001\u001aN\u0010Ð\u0001\u001a\u00020\u0007*\u00020E2>\u0010º\u0001\u001a9\u0012\u0016\u0012\u00140F¢\u0006\u000f\bÒ\u0001\u0012\n\bÓ\u0001\u0012\u0005\b\b(Ô\u0001\u0012\u0016\u0012\u00140F¢\u0006\u000f\bÒ\u0001\u0012\n\bÓ\u0001\u0012\u0005\b\b(Õ\u0001\u0012\u0004\u0012\u00020\u00070Ñ\u0001H\b\u001a[\u0010Ö\u0001\u001a\u00020\u0007\"\u0004\b\u0000\u0010z*\t\u0012\u0004\u0012\u0002Hz0×\u00012>\u0010¨\u0001\u001a9\u0012\u0016\u0012\u0014Hz¢\u0006\u000f\bÒ\u0001\u0012\n\bÓ\u0001\u0012\u0005\b\b(Ø\u0001\u0012\u0016\u0012\u00140\u0001¢\u0006\u000f\bÒ\u0001\u0012\n\bÓ\u0001\u0012\u0005\b\b(Ù\u0001\u0012\u0004\u0012\u00020\u00070Ñ\u0001H\b\u001a#\u0010Ö\u0001\u001a\u00020\u0007*\u00020E2\u0013\u0010º\u0001\u001a\u000e\u0012\u0004\u0012\u00020F\u0012\u0004\u0012\u00020\u00070\u0005H\b\u001a,\u0010Ú\u0001\u001a\u00020\u0007*\u00020\u00062\n\b\u0002\u0010Û\u0001\u001a\u00030\u00012\u0013\u0010º\u0001\u001a\u000e\u0012\u0004\u0012\u00020\u0006\u0012\u0004\u0012\u00020\u00070\u0005\u001aB\u0010Ü\u0001\u001a\u00020\u0007\"\u0004\b\u0000\u0010z*\t\u0012\u0004\u0012\u0002Hz0×\u00012%\u0010¨\u0001\u001a \u0012\u0016\u0012\u0014Hz¢\u0006\u000f\bÒ\u0001\u0012\n\bÓ\u0001\u0012\u0005\b\b(Ø\u0001\u0012\u0004\u0012\u00020\u00070\u0005H\b\u001a:\u0010Ý\u0001\u001a\u00020\u0007*\u0007\u0012\u0002\b\u00030×\u00012%\u0010¨\u0001\u001a \u0012\u0016\u0012\u00140\u0001¢\u0006\u000f\bÒ\u0001\u0012\n\bÓ\u0001\u0012\u0005\b\b(Ù\u0001\u0012\u0004\u0012\u00020\u00070\u0005H\b\u001a\u000b\u0010Þ\u0001\u001a\u00020c*\u00020F\u001a\u0015\u0010ß\u0001\u001a\u00020\u0001*\u00030¶\u00012\u0007\u0010à\u0001\u001a\u00020F\u001a\u0018\u0010á\u0001\u001a\u00020\u0001*\u00020F2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001H\u0007\u001a\u0019\u0010á\u0001\u001a\u00020\u0001*\u00030Å\u00012\t\b\u0001\u0010£\u0001\u001a\u00020\u0001H\u0007\u001a\u0018\u0010á\u0001\u001a\u00020\u0001*\u00020\u00062\t\b\u0001\u0010£\u0001\u001a\u00020\u0001H\u0007\u001a\u0018\u0010á\u0001\u001a\u00020\u0001*\u00020{2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001H\u0007\u001a\u0019\u0010á\u0001\u001a\u00020\u0001*\u00030â\u00012\t\b\u0001\u0010£\u0001\u001a\u00020\u0001H\u0007\u001a\u0018\u0010ã\u0001\u001a\u00020\u0001*\u00020F2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001H\u0007\u001a\u0017\u0010ä\u0001\u001a\u00030¥\u0001*\u00020F2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0018\u0010ä\u0001\u001a\u00030¥\u0001*\u00030Å\u00012\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0017\u0010ä\u0001\u001a\u00030¥\u0001*\u00020\u00062\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0017\u0010ä\u0001\u001a\u00030¥\u0001*\u00020{2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0018\u0010ä\u0001\u001a\u00030¥\u0001*\u00030â\u00012\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010å\u0001\u001a\u00020\u0017*\u00020F2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0017\u0010å\u0001\u001a\u00020\u0017*\u00030Å\u00012\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010å\u0001\u001a\u00020\u0017*\u00020\u00062\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0018\u0010å\u0001\u001a\u0004\u0018\u00010\u0017*\u00020{2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0017\u0010å\u0001\u001a\u00020\u0017*\u00030â\u00012\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010æ\u0001\u001a\u00020\u0017*\u00020F2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a3\u0010ç\u0001\u001a\u0004\u0018\u0001Hz\"\u0011\b\u0000\u0010z\u0018\u0001*\t\u0012\u0004\u0012\u0002Hz0è\u0001*\u00020\u00132\b\u0010Ù\u0001\u001a\u00030\u0001H\b¢\u0006\u0003\u0010é\u0001\u001a\u001a\u0010ê\u0001\u001a\u0004\u0018\u00010F*\u00030¶\u00012\n\b\u0002\u0010ë\u0001\u001a\u00030\u0001\u001a\u0017\u0010ì\u0001\u001a\u00030í\u0001*\u00020#2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0017\u0010ì\u0001\u001a\u00030í\u0001*\u00020F2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0018\u0010ì\u0001\u001a\u00030í\u0001*\u00030Å\u00012\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0017\u0010ì\u0001\u001a\u00030í\u0001*\u00020\u00062\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0017\u0010ì\u0001\u001a\u00030í\u0001*\u00020{2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0018\u0010ì\u0001\u001a\u00030í\u0001*\u00030â\u00012\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\f\u0010î\u0001\u001a\u00030ï\u0001*\u00020F\u001a\f\u0010ð\u0001\u001a\u00030ñ\u0001*\u00020F\u001a\f\u0010ò\u0001\u001a\u00030¬\u0001*\u00020F\u001a\f\u0010ó\u0001\u001a\u00030­\u0001*\u00020F\u001a\u0016\u0010ô\u0001\u001a\u00020\u0001*\u00020#2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010ô\u0001\u001a\u00020\u0001*\u00020F2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010ô\u0001\u001a\u00020\u0001*\u00020\u00062\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010ô\u0001\u001a\u00020\u0001*\u00020{2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u001e\u0010õ\u0001\u001a\u0004\u0018\u00010\u0001*\u00030¿\u00012\b\u0010Ù\u0001\u001a\u00030\u0001¢\u0006\u0003\u0010ö\u0001\u001a\u001e\u0010÷\u0001\u001a\u0004\u0018\u00010\u0003*\u00030¿\u00012\b\u0010Ù\u0001\u001a\u00030\u0001¢\u0006\u0003\u0010ø\u0001\u001a\u0016\u0010ù\u0001\u001a\u00020j*\u00020#2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010ù\u0001\u001a\u00020j*\u00020F2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0017\u0010ù\u0001\u001a\u00020j*\u00030Å\u00012\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010ù\u0001\u001a\u00020j*\u00020\u00062\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010ù\u0001\u001a\u00020j*\u00020{2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0017\u0010ù\u0001\u001a\u00020j*\u00030â\u00012\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010ú\u0001\u001a\u00020\u0001*\u00020#2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010ú\u0001\u001a\u00020\u0001*\u00020F2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0017\u0010ú\u0001\u001a\u00020\u0001*\u00030Å\u00012\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010ú\u0001\u001a\u00020\u0001*\u00020\u00062\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0016\u0010ú\u0001\u001a\u00020\u0001*\u00020{2\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0017\u0010ú\u0001\u001a\u00020\u0001*\u00030â\u00012\t\b\u0001\u0010£\u0001\u001a\u00020\u0001\u001a\u0015\u0010û\u0001\u001a\u00020\u0001*\u00030¶\u00012\u0007\u0010ü\u0001\u001a\u00020\u0001\u001a\u000e\u0010ý\u0001\u001a\u0004\u0018\u00010F*\u00030¶\u0001\u001a\r\u0010þ\u0001\u001a\u00030\u0001*\u00030\u0001\u001a\f\u0010þ\u0001\u001a\u00030\u0001*\u00020\u0019\u001a \u0010ÿ\u0001\u001a\r \u0002*\u0005\u0018\u00010â\u00010â\u0001*\u00030¶\u00012\u0007\u0010ü\u0001\u001a\u00020\u0001\u001a\u0015\u0010\u0002\u001a\u00020\u0001*\u00030¶\u00012\u0007\u0010ü\u0001\u001a\u00020\u0001\u001a\u000b\u0010\u0002\u001a\u00020j*\u00020F\u001a\u000b\u0010\u0002\u001a\u00020\u0007*\u00020F\u001a\u001a\u0010\u0002\u001a\u00020\u0007*\u000b\u0012\u0006\b\u0001\u0012\u00020F0\u0002¢\u0006\u0003\u0010\u0002\u001a\u000b\u0010\u0002\u001a\u00020\u0007*\u00020F\u001a\u001a\u0010\u0002\u001a\u00020\u0007*\u000b\u0012\u0006\b\u0001\u0012\u00020F0\u0002¢\u0006\u0003\u0010\u0002\u001a\f\u0010\u0002\u001a\u00020\u0007*\u00030\u0001\u001a=\u0010\u0002\u001a\u0002Hz\"\t\b\u0000\u0010z*\u00030Å\u0001*\u00020#2\u0007\u0010\u0002\u001a\u00020\u00012\n\b\u0002\u0010A\u001a\u0004\u0018\u00010E2\n\b\u0002\u0010\u0002\u001a\u00030\u0001¢\u0006\u0003\u0010\u0002\u001a;\u0010\u0002\u001a\u0002Hz\"\t\b\u0000\u0010z*\u00030Å\u0001*\u00020:2\u0007\u0010\u0002\u001a\u00020\u00012\b\u0010A\u001a\u0004\u0018\u00010E2\n\b\u0002\u0010\u0002\u001a\u00030\u0001¢\u0006\u0003\u0010\u0002\u001a;\u0010\u0002\u001a\u0002Hz\"\t\b\u0000\u0010z*\u00030Å\u0001*\u00020F2\u0007\u0010\u0002\u001a\u00020\u00012\b\u0010A\u001a\u0004\u0018\u00010E2\n\b\u0002\u0010\u0002\u001a\u00030\u0001¢\u0006\u0003\u0010\u0002\u001a;\u0010\u0002\u001a\u0002Hz\"\t\b\u0000\u0010z*\u00030Å\u0001*\u00020E2\u0007\u0010\u0002\u001a\u00020\u00012\b\b\u0002\u0010A\u001a\u00020E2\n\b\u0002\u0010\u0002\u001a\u00030\u0001¢\u0006\u0003\u0010\u0002\u001a;\u0010\u0002\u001a\u0002Hz\"\t\b\u0000\u0010z*\u00030Å\u0001*\u00020\u00062\u0007\u0010\u0002\u001a\u00020\u00012\b\u0010A\u001a\u0004\u0018\u00010E2\n\b\u0002\u0010\u0002\u001a\u00030\u0001¢\u0006\u0003\u0010\u0002\u001a:\u0010\u0002\u001a\u0002Hz\"\b\b\u0000\u0010z*\u00020F*\u00020E2\u0007\u0010\u0002\u001a\u00020\u00012\b\b\u0002\u0010A\u001a\u00020E2\n\b\u0002\u0010\u0002\u001a\u00030\u0001¢\u0006\u0003\u0010\u0002\u001a\f\u0010\u0002\u001a\u00030\u0001*\u00020F\u001a\f\u0010\u0002\u001a\u00030\u0001*\u00020#\u001a\f\u0010\u0002\u001a\u00030\u0001*\u00020\u0006\u001a\f\u0010\u0002\u001a\u00030\u0001*\u00020F\u001a\f\u0010\u0002\u001a\u00030\u0001*\u00020#\u001a\f\u0010\u0002\u001a\u00030\u0001*\u00020\u0006\u001a\f\u0010\u0002\u001a\u00030\u0001*\u00020#\u001a\f\u0010\u0002\u001a\u00030\u0001*\u00020F\u001a\u000b\u0010\u0002\u001a\u00020\u0007*\u00020\u0006\u001a\u0011\u0010\u0002\u001a\u00030\u0002*\u0007\u0012\u0002\b\u00030×\u0001\u001a\u001b\u0010\u0002\u001a\u00020\u0007*\u00020F2\u0006\u0010d\u001a\u00020\u00012\u0006\u0010e\u001a\u00020\u0001\u001a\u000b\u0010\u0002\u001a\u00020\u0007*\u00020F\u001a\f\u0010\u0002\u001a\u00020\u0007*\u00030\u0001\u001a\u0014\u0010\u0002\u001a\u0004\u0018\u00010\u0001*\u00030\u0001¢\u0006\u0003\u0010\u0002\u001a)\u0010 \u0002\u001a\u00020\u0007\"\u0004\b\u0000\u0010z*\t\u0012\u0004\u0012\u0002Hz0\u00012\t\u0010¡\u0002\u001a\u0004\u0018\u0001Hz¢\u0006\u0003\u0010¢\u0002\u001a'\u0010 \u0002\u001a\u00020\u0007\"\u0004\b\u0000\u0010z*\t\u0012\u0004\u0012\u0002Hz0£\u00022\u0007\u0010¡\u0002\u001a\u0002Hz¢\u0006\u0003\u0010¤\u0002\u001a5\u0010¥\u0002\u001a\u00020\u0007\"\u000f\b\u0000\u0010z*\t\u0012\u0004\u0012\u0002Hz0è\u0001*\u00020\u00132\b\u0010Ù\u0001\u001a\u00030\u00012\u0007\u0010¦\u0002\u001a\u0002Hz¢\u0006\u0003\u0010§\u0002\u001a'\u0010¨\u0002\u001a\u00030À\u0001*\u00030À\u00012\b\u0010Ù\u0001\u001a\u00030\u00012\b\u0010\u0016\u001a\u0004\u0018\u00010\u0001¢\u0006\u0003\u0010©\u0002\u001a'\u0010ª\u0002\u001a\u00030À\u0001*\u00030À\u00012\b\u0010Ù\u0001\u001a\u00030\u00012\b\u0010\u0016\u001a\u0004\u0018\u00010\u0003¢\u0006\u0003\u0010«\u0002\u001a9\u0010¬\u0002\u001a\u00020\u0007*\u0005\u0018\u00010­\u00022\u0006\u0010l\u001a\u00020#2\b\u0010®\u0002\u001a\u00030\u00022\u0014\u0010¨\u0001\u001a\u000f\u0012\u0005\u0012\u00030¯\u0002\u0012\u0004\u0012\u00020\u00070\u0005H\b\u001a7\u0010°\u0002\u001a\u000b\u0012\u0004\u0012\u0002Hz\u0018\u00010\u0002\"\u000b\b\u0000\u0010z\u0018\u0001*\u00030±\u0002*\u00030²\u00022\n\u0010³\u0002\u001a\u0005\u0018\u00010´\u0002H\b¢\u0006\u0003\u0010µ\u0002\u001a,\u0010¶\u0002\u001a\u000b\u0012\u0004\u0012\u0002Hz\u0018\u00010·\u0002\"\t\b\u0000\u0010z*\u00030±\u0002*\u00030²\u00022\n\u0010³\u0002\u001a\u0005\u0018\u00010´\u0002\u001a,\u0010¸\u0002\u001a\u000b\u0012\u0004\u0012\u0002Hz\u0018\u00010¹\u0002\"\t\b\u0000\u0010z*\u00030±\u0002*\u00030²\u00022\n\u0010³\u0002\u001a\u0005\u0018\u00010´\u0002\u001a\u000b\u0010º\u0002\u001a\u00020\u0001*\u00020\u0001\u001a(\u0010»\u0002\u001a\u00020\u0007*\u00020g2\u0018\u0010¨\u0001\u001a\u0013\u0012\u0004\u0012\u00020g\u0012\u0004\u0012\u00020\u00070\u0005¢\u0006\u0002\bhH\b\u001a)\u0010¼\u0002\u001a\u00020c*\u00020c2\u0007\u0010½\u0002\u001a\u00020j2\u0007\u0010¾\u0002\u001a\u00020j2\n\b\u0002\u0010¿\u0002\u001a\u00030\u0001\u001a)\u0010¼\u0002\u001a\u00020c*\u00020c2\u0007\u0010À\u0002\u001a\u00020\u00012\u0007\u0010Á\u0002\u001a\u00020\u00012\n\b\u0002\u0010¿\u0002\u001a\u00030\u0001\u001a)\u0010Â\u0002\u001a\u00020c*\u00020c2\u0007\u0010À\u0002\u001a\u00020\u00012\u0007\u0010Á\u0002\u001a\u00020\u00012\n\b\u0002\u0010¿\u0002\u001a\u00030\u0001\u001a)\u0010Ã\u0002\u001a\u00020c*\u00020c2\u0007\u0010À\u0002\u001a\u00020\u00012\u0007\u0010Á\u0002\u001a\u00020\u00012\n\b\u0002\u0010¿\u0002\u001a\u00030\u0001\u001a&\u0010Ä\u0002\u001a\u0002Hz\"\t\b\u0000\u0010z*\u00030Å\u0001*\u00030Å\u00022\u0007\u0010\u0002\u001a\u00020\u0001¢\u0006\u0003\u0010Æ\u0002\u001a\f\u0010Ç\u0002\u001a\u00020\u0007*\u00030\u0001\u001a\u0014\u0010È\u0002\u001a\u00020\u0007*\u00020\u00192\u0007\u0010½\u0001\u001a\u00020\u0017\u001a\u0016\u0010È\u0002\u001a\u00020\u0007*\u00020\u00192\t\b\u0001\u0010½\u0001\u001a\u00020\u0001\u001a\u0014\u0010É\u0002\u001a\u00020\u0007*\u00020\u00192\u0007\u0010½\u0001\u001a\u00020\u0017\u001a\u0016\u0010É\u0002\u001a\u00020\u0007*\u00020\u00192\t\b\u0001\u0010½\u0001\u001a\u00020\u0001\u001a\u0014\u0010Ê\u0002\u001a\u00020\u0007*\u00020\u00192\u0007\u0010½\u0001\u001a\u00020\u0017\u001a\u0016\u0010Ê\u0002\u001a\u00020\u0007*\u00020\u00192\t\b\u0001\u0010½\u0001\u001a\u00020\u0001\u001a\u0014\u0010Ë\u0002\u001a\u00020\u0007*\u00020\u00192\u0007\u0010½\u0001\u001a\u00020\u0017\u001a\u0016\u0010Ë\u0002\u001a\u00020\u0007*\u00020\u00192\t\b\u0001\u0010½\u0001\u001a\u00020\u0001\u001a\u0015\u0010Ì\u0002\u001a\u00020\u0007*\u00030Í\u00022\u0007\u0010¢\u0001\u001a\u00020\u0001\u001a\u0016\u0010Î\u0002\u001a\u00020\u0007*\u00030Í\u00022\b\u0010\u0001\u001a\u00030Ï\u0002\u001a$\u0010Ð\u0002\u001a\u00020\u0007*\u000b\u0012\u0006\b\u0001\u0012\u00020F0\u00022\b\u0010Ñ\u0002\u001a\u00030Ò\u0002¢\u0006\u0003\u0010Ó\u0002\u001a%\u0010Ô\u0002\u001a\u00020\u0007*\u00020F2\u0015\b\u0004\u0010¨\u0001\u001a\u000e\u0012\u0004\u0012\u00020F\u0012\u0004\u0012\u00020\u00070\u0005H\b\u001a)\u0010Õ\u0002\u001a\u00020\u0007\"\u0004\b\u0000\u0010z*\t\u0012\u0004\u0012\u0002Hz0\u00012\t\u0010¡\u0002\u001a\u0004\u0018\u0001Hz¢\u0006\u0003\u0010¢\u0002\u001a'\u0010Õ\u0002\u001a\u00020\u0007\"\u0004\b\u0000\u0010z*\t\u0012\u0004\u0012\u0002Hz0£\u00022\u0007\u0010¡\u0002\u001a\u0002Hz¢\u0006\u0003\u0010¤\u0002\u001a)\u0010Ö\u0002\u001a\u00020\u0007\"\u0004\b\u0000\u0010z*\t\u0012\u0004\u0012\u0002Hz0\u00012\t\u0010¡\u0002\u001a\u0004\u0018\u0001Hz¢\u0006\u0003\u0010¢\u0002\u001a'\u0010Ö\u0002\u001a\u00020\u0007\"\u0004\b\u0000\u0010z*\t\u0012\u0004\u0012\u0002Hz0£\u00022\u0007\u0010¡\u0002\u001a\u0002Hz¢\u0006\u0003\u0010¤\u0002\u001a\u0014\u0010×\u0002\u001a\u00020\u0007*\u00020F2\u0007\u0010Ø\u0002\u001a\u00020\u0001\u001a\u0014\u0010Ù\u0002\u001a\u00020\u0007*\u00020F2\u0007\u0010Ø\u0002\u001a\u00020\u0001\u001a\u0014\u0010Ú\u0002\u001a\u00020\u0007*\u00020F2\u0007\u0010Ø\u0002\u001a\u00020\u0001\u001a\u0014\u0010Û\u0002\u001a\u00020\u0007*\u00020F2\u0007\u0010Ø\u0002\u001a\u00020\u0001\u001a\u0014\u0010Ü\u0002\u001a\u00020\u0007*\u00020F2\u0007\u0010¼\u0002\u001a\u00020j\u001a)\u0010Ý\u0002\u001a\u00020\u0007\"\u0004\b\u0000\u0010z*\t\u0012\u0004\u0012\u0002Hz0\u00012\t\u0010¡\u0002\u001a\u0004\u0018\u0001Hz¢\u0006\u0003\u0010¢\u0002\u001a\u0014\u0010Þ\u0002\u001a\u00020\u0007*\u00020F2\u0007\u0010ß\u0002\u001a\u00020\u0001\u001a\u0014\u0010à\u0002\u001a\u00020\u0007*\u00020F2\u0007\u0010á\u0002\u001a\u00020j\u001a)\u0010â\u0002\u001a\u00020\u0007\"\u0004\b\u0000\u0010z*\t\u0012\u0004\u0012\u0002Hz0\u00012\t\u0010¡\u0002\u001a\u0004\u0018\u0001Hz¢\u0006\u0003\u0010¢\u0002\u001a'\u0010â\u0002\u001a\u00020\u0007\"\u0004\b\u0000\u0010z*\t\u0012\u0004\u0012\u0002Hz0£\u00022\u0007\u0010¡\u0002\u001a\u0002Hz¢\u0006\u0003\u0010¤\u0002\u001a\u000b\u0010ã\u0002\u001a\u00020\u0007*\u00020F\u001a\u001a\u0010ã\u0002\u001a\u00020\u0007*\u000b\u0012\u0006\b\u0001\u0012\u00020F0\u0002¢\u0006\u0003\u0010\u0002\u001a\f\u0010ä\u0002\u001a\u00020\u0007*\u00030\u0001\u001a!\u0010å\u0002\u001a\u00020\u0007*\u00020F2\u0011\b\u0004\u0010æ\u0002\u001a\n\u0012\u0005\u0012\u00030\u00010¹\u0001H\b\u001a\u001b\u0010ç\u0002\u001a\u00020\u0007\"\u000b\b\u0000\u0010z\u0018\u0001*\u00030Å\u0002*\u00020#H\b\u001a6\u0010ç\u0002\u001a\u00020\u0007\"\u000b\b\u0000\u0010z\u0018\u0001*\u00030Å\u0002*\u00020#2\u0019\u0010è\u0002\u001a\u0014\u0012\u0005\u0012\u00030é\u0002\u0012\u0004\u0012\u00020\u00070\u0005¢\u0006\u0002\bhH\b\u001a\u001b\u0010ç\u0002\u001a\u00020\u0007\"\u000b\b\u0000\u0010z\u0018\u0001*\u00030Å\u0002*\u00020\u0006H\b\u001a6\u0010ç\u0002\u001a\u00020\u0007\"\u000b\b\u0000\u0010z\u0018\u0001*\u00030Å\u0002*\u00020\u00062\u0019\u0010è\u0002\u001a\u0014\u0012\u0005\u0012\u00030é\u0002\u0012\u0004\u0012\u00020\u00070\u0005¢\u0006\u0002\bhH\b\u001a5\u0010ê\u0002\u001a\u00020\u0007\"\u000b\b\u0000\u0010z\u0018\u0001*\u00030Å\u0002*\u00020#2\u0018\u0010ë\u0002\u001a\u0013\u0012\u0004\u0012\u00020\u0013\u0012\u0004\u0012\u00020\u00070\u0005¢\u0006\u0002\bhH\b\u001a5\u0010ê\u0002\u001a\u00020\u0007\"\u000b\b\u0000\u0010z\u0018\u0001*\u00030Å\u0002*\u00020\u00062\u0018\u0010ë\u0002\u001a\u0013\u0012\u0004\u0012\u00020\u0013\u0012\u0004\u0012\u00020\u00070\u0005¢\u0006\u0002\bhH\b\u001a\u0017\u0010ì\u0002\u001a\u00020\u0017*\u00020\u00172\n\u0010¤\u0001\u001a\u0005\u0018\u00010¥\u0001\u001a\u0016\u0010ì\u0002\u001a\u00020\u0017*\u00020\u00172\t\b\u0001\u0010¢\u0001\u001a\u00020\u0001\u001a\u001a\u0010í\u0002\u001a\u00020\u0013*\u0011\u0012\u0005\u0012\u00030\u0001\u0012\u0005\u0012\u00030\u00010î\u0002\u001a\f\u0010ï\u0002\u001a\u00020\u0001*\u00030\u0001\u001a\u0014\u0010ð\u0002\u001a\u00020j*\u00020#2\u0007\u0010ñ\u0002\u001a\u00020j\u001a\u0014\u0010ð\u0002\u001a\u00020j*\u00020F2\u0007\u0010ñ\u0002\u001a\u00020j\u001a\u0014\u0010ð\u0002\u001a\u00020j*\u00020\u00062\u0007\u0010ñ\u0002\u001a\u00020j\u001a\u0014\u0010ð\u0002\u001a\u00020j*\u00020{2\u0007\u0010ñ\u0002\u001a\u00020j\u001a\u0014\u0010ò\u0002\u001a\u00020\u0001*\u00020#2\u0007\u0010ñ\u0002\u001a\u00020j\u001a\u0014\u0010ò\u0002\u001a\u00020\u0001*\u00020F2\u0007\u0010ñ\u0002\u001a\u00020j\u001a\u0014\u0010ò\u0002\u001a\u00020\u0001*\u00020\u00062\u0007\u0010ñ\u0002\u001a\u00020j\u001a\u0014\u0010ò\u0002\u001a\u00020\u0001*\u00020{2\u0007\u0010ñ\u0002\u001a\u00020j\u001a\u0015\u0010ó\u0002\u001a\u00020\u0007*\u00020E2\b\u0010ó\u0002\u001a\u00030ô\u0002\u001a,\u0010õ\u0002\u001a\u00020\u0007*\u00020E2\n\b\u0002\u0010Û\u0001\u001a\u00030\u00012\u0013\u0010º\u0001\u001a\u000e\u0012\u0004\u0012\u00020F\u0012\u0004\u0012\u00020\u00070\u0005\u001a*\u0010ö\u0002\u001a\t\u0012\u0004\u0012\u0002Hz0\u0002\"\u0006\b\u0000\u0010z\u0018\u0001*\t\u0012\u0004\u0012\u0002Hz0×\u0001H\b¢\u0006\u0003\u0010÷\u0002\u001a$\u0010ø\u0002\u001a\t\u0012\u0004\u0012\u0002Hz0·\u0002\"\u0006\b\u0000\u0010z\u0018\u0001*\t\u0012\u0004\u0012\u0002Hz0×\u0001H\b\u001a\u0015\u0010ù\u0002\u001a\u00020\u0007*\u00020F2\b\u0010\u0002\u001a\u00030\u0001\u001a$\u0010ù\u0002\u001a\u00020\u0007*\u000b\u0012\u0006\b\u0001\u0012\u00020F0\u00022\b\u0010\u0002\u001a\u00030\u0001¢\u0006\u0003\u0010ú\u0002\u001a\u0015\u0010û\u0002\u001a\u00020\u0007*\u00020F2\b\u0010\u0002\u001a\u00030\u0001\u001a\u000b\u0010ü\u0002\u001a\u00020\u0017*\u00020\u0017\u001a8\u0010ý\u0002\u001a\u00020\u0007\"\t\b\u0000\u0010z*\u00030±\u0002*\u00030²\u00022\u0010\u0010þ\u0002\u001a\u000b\u0012\u0004\u0012\u0002Hz\u0018\u00010\u00022\u0007\u0010ÿ\u0002\u001a\u00020\u0001¢\u0006\u0003\u0010\u0003\u001a2\u0010\u0003\u001a\u00020\u0007\"\t\b\u0000\u0010z*\u00030±\u0002*\u00030²\u00022\u0010\u0010\u0003\u001a\u000b\u0012\u0004\u0012\u0002Hz\u0018\u00010·\u00022\u0007\u0010ÿ\u0002\u001a\u00020\u0001\u001a2\u0010\u0003\u001a\u00020\u0007\"\t\b\u0000\u0010z*\u00030±\u0002*\u00030²\u00022\u0010\u0010\u0003\u001a\u000b\u0012\u0004\u0012\u0002Hz\u0018\u00010¹\u00022\u0007\u0010ÿ\u0002\u001a\u00020\u0001\"\u000e\u0010\u0000\u001a\u00020\u0001XT¢\u0006\u0002\n\u0000\"\u000e\u0010\u0002\u001a\u00020\u0003XT¢\u0006\u0002\n\u0000\"\u001a\u0010\u0004\u001a\u000e\u0012\u0004\u0012\u00020\u0006\u0012\u0004\u0012\u00020\u00070\u0005X\u0004¢\u0006\u0002\n\u0000\"\u000e\u0010\b\u001a\u00020\u0001XT¢\u0006\u0002\n\u0000\"\u000e\u0010\t\u001a\u00020\nX\u0004¢\u0006\u0002\n\u0000\"\u000e\u0010\u000b\u001a\u00020\fX\u0004¢\u0006\u0002\n\u0000\"\u000e\u0010\r\u001a\u00020\u0001XT¢\u0006\u0002\n\u0000\"\u0015\u0010\u000e\u001a\u00020\u000f*\u00020\u00068F¢\u0006\u0006\u001a\u0004\b\u0010\u0010\u0011\"\u0015\u0010\u0012\u001a\u00020\u0013*\u00020\u00068F¢\u0006\u0006\u001a\u0004\b\u0014\u0010\u0015\",\u0010\u0018\u001a\u0004\u0018\u00010\u0017*\u00020\u00192\b\u0010\u0016\u001a\u0004\u0018\u00010\u00178F@FX\u000e¢\u0006\f\u001a\u0004\b\u001a\u0010\u001b\"\u0004\b\u001c\u0010\u001d\",\u0010\u001e\u001a\u0004\u0018\u00010\u0017*\u00020\u00192\b\u0010\u0016\u001a\u0004\u0018\u00010\u00178F@FX\u000e¢\u0006\f\u001a\u0004\b\u001f\u0010\u001b\"\u0004\b \u0010\u001d\"\u0015\u0010!\u001a\u00020\"*\u00020#8F¢\u0006\u0006\u001a\u0004\b$\u0010%\"\u0015\u0010&\u001a\u00020#*\u00020\u00068F¢\u0006\u0006\u001a\u0004\b'\u0010(\"\u0015\u0010)\u001a\u00020**\u00020#8F¢\u0006\u0006\u001a\u0004\b+\u0010,\",\u0010-\u001a\u0004\u0018\u00010\u0017*\u00020\u00192\b\u0010\u0016\u001a\u0004\u0018\u00010\u00178F@FX\u000e¢\u0006\f\u001a\u0004\b.\u0010\u001b\"\u0004\b/\u0010\u001d\",\u00100\u001a\u0004\u0018\u00010\u0017*\u00020\u00192\b\u0010\u0016\u001a\u0004\u0018\u00010\u00178F@FX\u000e¢\u0006\f\u001a\u0004\b1\u0010\u001b\"\u0004\b2\u0010\u001d\"\u0015\u00103\u001a\u000204*\u00020\u00068F¢\u0006\u0006\u001a\u0004\b5\u00106\"\u0015\u00107\u001a\u000204*\u00020\u00068F¢\u0006\u0006\u001a\u0004\b8\u00106\"\u0015\u00109\u001a\u00020:*\u00020#8F¢\u0006\u0006\u001a\u0004\b;\u0010<\"\u0015\u0010=\u001a\u00020>*\u00020#8F¢\u0006\u0006\u001a\u0004\b?\u0010@\"\u0015\u0010A\u001a\u00020\u0006*\u00020\u00068F¢\u0006\u0006\u001a\u0004\bB\u0010C\"\u0017\u0010D\u001a\u0004\u0018\u00010E*\u00020F8F¢\u0006\u0006\u001a\u0004\bG\u0010H\"\u0015\u0010I\u001a\u00020E*\u00020E8F¢\u0006\u0006\u001a\u0004\bJ\u0010K\"(\u0010L\u001a\u00020\u0003*\u00020M2\u0006\u0010\u0016\u001a\u00020\u00038F@FX\u000e¢\u0006\f\u001a\u0004\bN\u0010O\"\u0004\bP\u0010Q\",\u0010R\u001a\u0004\u0018\u00010\u0017*\u00020\u00192\b\u0010\u0016\u001a\u0004\u0018\u00010\u00178F@FX\u000e¢\u0006\f\u001a\u0004\bS\u0010\u001b\"\u0004\bT\u0010\u001d\",\u0010U\u001a\u0004\u0018\u00010\u0017*\u00020\u00192\b\u0010\u0016\u001a\u0004\u0018\u00010\u00178F@FX\u000e¢\u0006\f\u001a\u0004\bV\u0010\u001b\"\u0004\bW\u0010\u001d\",\u0010X\u001a\u0004\u0018\u00010\u0017*\u00020\u00192\b\u0010\u0016\u001a\u0004\u0018\u00010\u00178F@FX\u000e¢\u0006\f\u001a\u0004\bY\u0010\u001b\"\u0004\bZ\u0010\u001d\",\u0010[\u001a\u0004\u0018\u00010\u0017*\u00020\u00192\b\u0010\u0016\u001a\u0004\u0018\u00010\u00178F@FX\u000e¢\u0006\f\u001a\u0004\b\\\u0010\u001b\"\u0004\b]\u0010\u001d\"\u0015\u0010^\u001a\u00020_*\u00020#8F¢\u0006\u0006\u001a\u0004\b`\u0010a¨\u0006\u0003"}, bng = {"COLOR_ARGB_MASK", "", "COLOR_ARGB_MASK_LONG", "", "keepNestedFragmentsViewsAction", "Lkotlin/Function1;", "Landroidx/fragment/app/Fragment;", "", "matchParent", "matrix", "Landroid/graphics/Matrix;", "typedValue", "Landroid/util/TypedValue;", "wrapContent", "act", "Landroidx/fragment/app/FragmentActivity;", "getAct", "(Landroidx/fragment/app/Fragment;)Landroidx/fragment/app/FragmentActivity;", "args", "Landroid/os/Bundle;", "getArgs", "(Landroidx/fragment/app/Fragment;)Landroid/os/Bundle;", "value", "Landroid/graphics/drawable/Drawable;", "bottomDrawable", "Landroid/widget/TextView;", "getBottomDrawable", "(Landroid/widget/TextView;)Landroid/graphics/drawable/Drawable;", "setBottomDrawable", "(Landroid/widget/TextView;Landroid/graphics/drawable/Drawable;)V", "bottomDrawableWithBounds", "getBottomDrawableWithBounds", "setBottomDrawableWithBounds", "connectivityManager", "Landroid/net/ConnectivityManager;", "Landroid/content/Context;", "getConnectivityManager", "(Landroid/content/Context;)Landroid/net/ConnectivityManager;", "ctx", "getCtx", "(Landroidx/fragment/app/Fragment;)Landroid/content/Context;", "downloadManager", "Landroid/app/DownloadManager;", "getDownloadManager", "(Landroid/content/Context;)Landroid/app/DownloadManager;", "endDrawable", "getEndDrawable", "setEndDrawable", "endDrawableWithBounds", "getEndDrawableWithBounds", "setEndDrawableWithBounds", "fmChild", "Landroidx/fragment/app/FragmentManager;", "getFmChild", "(Landroidx/fragment/app/Fragment;)Landroidx/fragment/app/FragmentManager;", "fmSelf", "getFmSelf", "layoutInflater", "Landroid/view/LayoutInflater;", "getLayoutInflater", "(Landroid/content/Context;)Landroid/view/LayoutInflater;", "notificationManager", "Landroid/app/NotificationManager;", "getNotificationManager", "(Landroid/content/Context;)Landroid/app/NotificationManager;", "parent", "getParent", "(Landroidx/fragment/app/Fragment;)Landroidx/fragment/app/Fragment;", "parentView", "Landroid/view/ViewGroup;", "Landroid/view/View;", "getParentView", "(Landroid/view/View;)Landroid/view/ViewGroup;", "rootViewGroup", "getRootViewGroup", "(Landroid/view/ViewGroup;)Landroid/view/ViewGroup;", "safeDuration", "Landroid/animation/Animator;", "getSafeDuration", "(Landroid/animation/Animator;)J", "setSafeDuration", "(Landroid/animation/Animator;J)V", "startDrawable", "getStartDrawable", "setStartDrawable", "startDrawableWithBounds", "getStartDrawableWithBounds", "setStartDrawableWithBounds", "topDrawable", "getTopDrawable", "setTopDrawable", "topDrawableWithBounds", "getTopDrawableWithBounds", "setTopDrawableWithBounds", "windowManager", "Landroid/view/WindowManager;", "getWindowManager", "(Landroid/content/Context;)Landroid/view/WindowManager;", "draw", "Landroid/graphics/Bitmap;", "width", "height", "onDraw", "Landroid/graphics/Canvas;", "Lkotlin/ExtensionFunctionType;", "fastRound", "", "getDisplayHeight", "context", "output", "Landroid/util/DisplayMetrics;", "getDisplayMetrics", "getDisplayWidth", "getFrameParams", "Landroid/widget/FrameLayout$LayoutParams;", "w", "h", "gravity", "getLinearParams", "Landroid/widget/LinearLayout$LayoutParams;", "weight", "getViewModel", "T", "Landroidx/lifecycle/ViewModel;", "f", "factory", "Landroidx/lifecycle/ViewModelProvider$Factory;", "(Landroidx/fragment/app/Fragment;Landroidx/lifecycle/ViewModelProvider$Factory;)Landroidx/lifecycle/ViewModel;", "a", "(Landroidx/fragment/app/FragmentActivity;Landroidx/lifecycle/ViewModelProvider$Factory;)Landroidx/lifecycle/ViewModel;", "hasPermission", "", "permission", "", "isLPlus", "isMPlus", "isMainThread", "isNPlus", "isOPlus", "isPPlus", "makeMeasureSpec", "size", "mode", "mediatorLiveData", "Landroidx/lifecycle/MediatorLiveData;", "def", "(Ljava/lang/Object;)Landroidx/lifecycle/MediatorLiveData;", "mutableLiveData", "Landroidx/lifecycle/MutableLiveData;", "(Ljava/lang/Object;)Landroidx/lifecycle/MutableLiveData;", "addFilter", "Landroid/widget/EditText;", "filter", "Landroid/text/InputFilter;", "argb2rgba", "asUri", "Landroid/net/Uri;", "res", "Landroid/content/res/Resources;", "autoTogetherTransition", "autoTransition", "clearDrawables", "color", "resId", "colorList", "Landroid/content/res/ColorStateList;", "commit", "allowStateLoss", "block", "Landroidx/fragment/app/FragmentTransaction;", "commitNow", "component1", "Landroid/graphics/Rect;", "Landroid/graphics/RectF;", "component2", "component3", "component4", "Landroid/app/Application;", "Landroidx/lifecycle/AndroidViewModel;", "deepEnabled", "enabled", "disableChangeAnimations", "Landroidx/recyclerview/widget/RecyclerView;", "doOnLayout", "condition", "Lkotlin/Function0;", "action", "doOnPreDraw", "doOnPreDrawSkip", "drawable", "editApply", "Landroid/content/SharedPreferences;", "Landroid/content/SharedPreferences$Editor;", "enableHardwareLayer", "enableNoneLayer", "fastEnabled", "findBinding", "Landroidx/databinding/ViewDataBinding;", "(Landroid/view/View;)Landroidx/databinding/ViewDataBinding;", "findChildFragmentManager", "fClass", "Ljava/lang/Class;", "findChildInstance", "(Landroidx/fragment/app/Fragment;Ljava/lang/Class;)Landroidx/fragment/app/Fragment;", "findFragmentManager", "findParentInstance", "findParentInstanceOptional", "findTraversal", "forCurrNext", "Lkotlin/Function2;", "Lkotlin/ParameterName;", "name", "curr", "next", "forEach", "Landroid/util/SparseArray;", "element", "key", "forEachChild", "recursive", "forEachElement", "forEachKey", "getBitmap", "getChildViewType", "view", "getColor", "Landroidx/recyclerview/widget/RecyclerView$ViewHolder;", "getColorAttr", "getColorStateList", "getDrawable", "getDrawableAttr", "getEnum", "", "(Landroid/os/Bundle;Ljava/lang/String;)Ljava/lang/Enum;", "getFirstChild", "reversed", "getFont", "Landroid/graphics/Typeface;", "getGlobalPoint", "Landroid/graphics/Point;", "getGlobalPointF", "Landroid/graphics/PointF;", "getGlobalRect", "getGlobalRectF", "getInt", "getIntOrNull", "(Landroid/content/SharedPreferences;Ljava/lang/String;)Ljava/lang/Integer;", "getLongOrNull", "(Landroid/content/SharedPreferences;Ljava/lang/String;)Ljava/lang/Long;", "getPixels", "getPixelsInt", "getPosition", "index", "getTopLeftView", "getTrimmedText", "getViewHolder", "kotlin.jvm.PlatformType", "getViewType", "getVisibleByHeight", "gone", "", "([Landroid/view/View;)V", "hide", "hideKeyborad", "inflateBinding", "layoutRes", "attachToRoot", "(Landroid/content/Context;ILandroid/view/ViewGroup;Z)Landroidx/databinding/ViewDataBinding;", "(Landroid/view/LayoutInflater;ILandroid/view/ViewGroup;Z)Landroidx/databinding/ViewDataBinding;", "(Landroid/view/View;ILandroid/view/ViewGroup;Z)Landroidx/databinding/ViewDataBinding;", "(Landroid/view/ViewGroup;ILandroid/view/ViewGroup;Z)Landroidx/databinding/ViewDataBinding;", "(Landroidx/fragment/app/Fragment;ILandroid/view/ViewGroup;Z)Landroidx/databinding/ViewDataBinding;", "inflateView", "(Landroid/view/ViewGroup;ILandroid/view/ViewGroup;Z)Landroid/view/View;", "isGone", "isLandscape", "isNotVisible", "isPortrait", "isTablet", "isVisible", "keepNestedFragmentsViews", "keysArray", "", "measureInBox", "measureInDisplay", "moveCursorToTheEnd", "parseColor", "(Ljava/lang/String;)Ljava/lang/Integer;", "postValueIfDiffers", "newValue", "(Landroidx/lifecycle/MutableLiveData;Ljava/lang/Object;)V", "Lcom/iqoption/core/data/livedata/IQMutableLiveData;", "(Lcom/iqoption/core/data/livedata/IQMutableLiveData;Ljava/lang/Object;)V", "putEnum", "enum", "(Landroid/os/Bundle;Ljava/lang/String;Ljava/lang/Enum;)V", "putIntOrClear", "(Landroid/content/SharedPreferences$Editor;Ljava/lang/String;Ljava/lang/Integer;)Landroid/content/SharedPreferences$Editor;", "putLongOrClear", "(Landroid/content/SharedPreferences$Editor;Ljava/lang/String;Ljava/lang/Long;)Landroid/content/SharedPreferences$Editor;", "read", "Landroid/util/AttributeSet;", "styleable", "Landroid/content/res/TypedArray;", "readTypedArray", "Landroid/os/Parcelable;", "Landroid/os/Parcel;", "classLoader", "Ljava/lang/ClassLoader;", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;)[Landroid/os/Parcelable;", "readTypedList", "", "readTypedSet", "", "rgba2argb", "save", "scale", "sx", "sy", "recycleSource", "newWidth", "newHeight", "scaleAspectRatioMax", "scaleAspectRatioMin", "setContent", "Landroid/app/Activity;", "(Landroid/app/Activity;I)Landroidx/databinding/ViewDataBinding;", "setCursorToEnd", "setDrawableBottom", "setDrawableLeft", "setDrawableRight", "setDrawableTop", "setImageTint", "Landroid/widget/ImageView;", "setImageTintMode", "Landroid/graphics/PorterDuff$Mode;", "setOnClickListener", "listener", "Landroid/view/View$OnClickListener;", "([Landroid/view/View;Landroid/view/View$OnClickListener;)V", "setOnDelayedClickListener", "setOrPost", "setOrPostIfDiffers", "setPaddingBottom", "p", "setPaddingEnd", "setPaddingStart", "setPaddingTop", "setScale", "setThenClear", "setTopTo", "top", "setTranslation", "translation", "setValueIfDiffers", "show", "showKeyboard", "skipDrawUntil", "predicate", "startActivity", "intentBuilder", "Landroid/content/Intent;", "startActivityWithExtras", "extrasBuilder", "tint", "toBundle", "", "toColor", "toPixels", "dp", "toPixelsInt", "transition", "Landroidx/transition/Transition;", "traversal", "valuesArray", "(Landroid/util/SparseArray;)[Ljava/lang/Object;", "valuesList", "visible", "([Landroid/view/View;Z)V", "visibleOrInvisible", "wrap", "writeTypedArray", "array", "flags", "(Landroid/os/Parcel;[Landroid/os/Parcelable;I)V", "writeTypedList", "list", "writeTypedSet", "set", "core_release"})
/* compiled from: AndroidExtensions.kt */
public final class a {
    private static final kotlin.jvm.a.b<Fragment, l> bgF = AndroidExt$keepNestedFragmentsViewsAction$1.bgK;
    private static final TypedValue bgG = new TypedValue();
    private static final Matrix matrix = new Matrix();

    @i(bne = {1, 1, 15}, bnf = {"\u0000\u0011\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0000*\u0001\u0000\b\n\u0018\u00002\u00020\u0001J\b\u0010\u0002\u001a\u00020\u0003H\u0016¨\u0006\u0004"}, bng = {"com/iqoption/core/ext/AndroidExt$doOnLayout$2", "Landroid/view/ViewTreeObserver$OnGlobalLayoutListener;", "onGlobalLayout", "", "core_release"})
    /* compiled from: AndroidExtensions.kt */
    public static final class a implements OnGlobalLayoutListener {
        final /* synthetic */ View bgH;
        final /* synthetic */ kotlin.jvm.a.a bgI;
        final /* synthetic */ kotlin.jvm.a.a bgJ;

        public a(View view, kotlin.jvm.a.a aVar, kotlin.jvm.a.a aVar2) {
            this.bgH = view;
            this.bgI = aVar;
            this.bgJ = aVar2;
        }

        public void onGlobalLayout() {
            if (((Boolean) this.bgI.invoke()).booleanValue()) {
                this.bgH.getViewTreeObserver().removeOnGlobalLayoutListener(this);
                this.bgJ.invoke();
            }
        }
    }

    @i(bne = {1, 1, 15}, bnf = {"\u0000\u0017\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0010\u0002\n\u0000\n\u0002\u0018\u0002\n\u0000*\u0001\u0000\b\n\u0018\u00002\u00020\u0001J\u0010\u0010\u0002\u001a\u00020\u00032\u0006\u0010\u0004\u001a\u00020\u0005H\u0016¨\u0006\u0006"}, bng = {"com/iqoption/core/ext/AndroidExt$setOnDelayedClickListener$1", "Lcom/iqoption/core/ext/OnDelayClickListener;", "onDelayClick", "", "v", "Landroid/view/View;", "core_release"})
    /* compiled from: AndroidExtensions.kt */
    public static final class b extends g {
        final /* synthetic */ kotlin.jvm.a.b bgL;

        public b(kotlin.jvm.a.b bVar) {
            this.bgL = bVar;
            super(0, 1, null);
        }

        public void M(View view) {
            kotlin.jvm.internal.i.f(view, "v");
            this.bgL.invoke(view);
        }
    }

    public static final int M(float f) {
        return (int) (f + 0.5f);
    }

    @ColorInt
    public static final int k(Context context, @ColorRes int i) {
        kotlin.jvm.internal.i.f(context, "$this$color");
        return ContextCompat.getColor(context, i);
    }

    public static final float l(Context context, @DimenRes int i) {
        kotlin.jvm.internal.i.f(context, "$this$getPixels");
        return context.getResources().getDimension(i);
    }

    public static final int m(Context context, @DimenRes int i) {
        kotlin.jvm.internal.i.f(context, "$this$getPixelsInt");
        return context.getResources().getDimensionPixelSize(i);
    }

    public static final Typeface getFont(Context context, @FontRes int i) {
        kotlin.jvm.internal.i.f(context, "$this$getFont");
        Typeface font = ResourcesCompat.getFont(context, i);
        if (font == null) {
            kotlin.jvm.internal.i.bnJ();
        }
        kotlin.jvm.internal.i.e(font, "ResourcesCompat.getFont(this, resId)!!");
        return font;
    }

    public static final Drawable n(Context context, @DrawableRes int i) {
        kotlin.jvm.internal.i.f(context, "$this$drawable");
        Drawable drawable = ContextCompat.getDrawable(context, i);
        if (drawable == null) {
            kotlin.jvm.internal.i.bnJ();
        }
        kotlin.jvm.internal.i.e(drawable, "ContextCompat.getDrawable(this, resId)!!");
        return drawable;
    }

    public static final float a(Context context, float f) {
        kotlin.jvm.internal.i.f(context, "$this$toPixels");
        Resources resources = context.getResources();
        kotlin.jvm.internal.i.e(resources, "resources");
        return TypedValue.applyDimension(1, f, resources.getDisplayMetrics());
    }

    public static final int b(Context context, float f) {
        kotlin.jvm.internal.i.f(context, "$this$toPixelsInt");
        float a = a(context, f);
        float f2 = (float) null;
        int i = (int) (a >= f2 ? a + 0.5f : a - 0.5f);
        if (i != 0) {
            return i;
        }
        if (f == 0.0f) {
            return 0;
        }
        return f > f2 ? 1 : -1;
    }

    public static final boolean aZ(Context context) {
        kotlin.jvm.internal.i.f(context, "$this$isLandscape");
        Resources resources = context.getResources();
        kotlin.jvm.internal.i.e(resources, "resources");
        return resources.getConfiguration().orientation == 2;
    }

    public static final boolean ba(Context context) {
        kotlin.jvm.internal.i.f(context, "$this$isTablet");
        return context.getResources().getBoolean(com.iqoption.core.i.b.isTablet);
    }

    @ColorInt
    public static final int a(Fragment fragment, @ColorRes int i) {
        kotlin.jvm.internal.i.f(fragment, "$this$getColor");
        return ContextCompat.getColor(q(fragment), i);
    }

    public static final float b(Fragment fragment, @DimenRes int i) {
        kotlin.jvm.internal.i.f(fragment, "$this$getPixels");
        return fragment.getResources().getDimension(i);
    }

    public static final int c(Fragment fragment, @DimenRes int i) {
        kotlin.jvm.internal.i.f(fragment, "$this$getPixelsInt");
        return fragment.getResources().getDimensionPixelSize(i);
    }

    public static final Typeface d(Fragment fragment, @FontRes int i) {
        kotlin.jvm.internal.i.f(fragment, "$this$getFont");
        Typeface font = ResourcesCompat.getFont(q(fragment), i);
        if (font == null) {
            kotlin.jvm.internal.i.bnJ();
        }
        kotlin.jvm.internal.i.e(font, "ResourcesCompat.getFont(ctx, resId)!!");
        return font;
    }

    public static final Drawable e(Fragment fragment, @DrawableRes int i) {
        kotlin.jvm.internal.i.f(fragment, "$this$getDrawable");
        Drawable drawable = ContextCompat.getDrawable(q(fragment), i);
        if (drawable == null) {
            kotlin.jvm.internal.i.bnJ();
        }
        kotlin.jvm.internal.i.e(drawable, "ContextCompat.getDrawable(ctx, resId)!!");
        return drawable;
    }

    public static final boolean p(Fragment fragment) {
        kotlin.jvm.internal.i.f(fragment, "$this$isLandscape");
        Context requireContext = fragment.requireContext();
        kotlin.jvm.internal.i.e(requireContext, "requireContext()");
        return aZ(requireContext);
    }

    public static final <T extends Fragment> T a(Fragment fragment, Class<? extends T> cls) {
        kotlin.jvm.internal.i.f(fragment, "$this$findParentInstance");
        kotlin.jvm.internal.i.f(cls, "fClass");
        Fragment b = b(fragment, (Class) cls);
        if (b != null) {
            return b;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(fragment);
        stringBuilder.append(" does not have parent fragment of class ");
        stringBuilder.append(cls);
        throw new IllegalArgumentException(stringBuilder.toString());
    }

    public static final <T extends Fragment> T b(Fragment fragment, Class<? extends T> cls) {
        kotlin.jvm.internal.i.f(fragment, "$this$findParentInstanceOptional");
        kotlin.jvm.internal.i.f(cls, "fClass");
        do {
            fragment = fragment.getParentFragment();
            if (fragment == null) {
                return null;
            }
        } while (!cls.isAssignableFrom(fragment.getClass()));
        return fragment;
    }

    public static final void a(Fragment fragment, boolean z, kotlin.jvm.a.b<? super Fragment, l> bVar) {
        kotlin.jvm.internal.i.f(fragment, "$this$forEachChild");
        kotlin.jvm.internal.i.f(bVar, "action");
        FragmentManager childFragmentManager = fragment.getChildFragmentManager();
        kotlin.jvm.internal.i.e(childFragmentManager, "childFragmentManager");
        List<Fragment> fragments = childFragmentManager.getFragments();
        kotlin.jvm.internal.i.e(fragments, "childFragmentManager.fragments");
        for (Fragment fragment2 : fragments) {
            String str = "child";
            if (z) {
                kotlin.jvm.internal.i.e(fragment2, str);
                a(fragment2, z, (kotlin.jvm.a.b) bVar);
            }
            kotlin.jvm.internal.i.e(fragment2, str);
            bVar.invoke(fragment2);
        }
    }

    public static final Context q(Fragment fragment) {
        kotlin.jvm.internal.i.f(fragment, "$this$ctx");
        Context requireContext = fragment.requireContext();
        kotlin.jvm.internal.i.e(requireContext, "requireContext()");
        return requireContext;
    }

    public static final FragmentActivity r(Fragment fragment) {
        kotlin.jvm.internal.i.f(fragment, "$this$act");
        FragmentActivity requireActivity = fragment.requireActivity();
        kotlin.jvm.internal.i.e(requireActivity, "requireActivity()");
        return requireActivity;
    }

    public static final Bundle s(Fragment fragment) {
        kotlin.jvm.internal.i.f(fragment, "$this$args");
        Bundle arguments = fragment.getArguments();
        if (arguments != null) {
            return arguments;
        }
        throw new IllegalArgumentException("Required value was null.".toString());
    }

    public static final FragmentManager t(Fragment fragment) {
        kotlin.jvm.internal.i.f(fragment, "$this$fmSelf");
        FragmentManager requireFragmentManager = fragment.requireFragmentManager();
        kotlin.jvm.internal.i.e(requireFragmentManager, "requireFragmentManager()");
        return requireFragmentManager;
    }

    public static final FragmentManager u(Fragment fragment) {
        kotlin.jvm.internal.i.f(fragment, "$this$fmChild");
        FragmentManager childFragmentManager = fragment.getChildFragmentManager();
        kotlin.jvm.internal.i.e(childFragmentManager, "childFragmentManager");
        return childFragmentManager;
    }

    public static final Fragment v(Fragment fragment) {
        kotlin.jvm.internal.i.f(fragment, "$this$parent");
        fragment = fragment.getParentFragment();
        if (fragment != null) {
            return fragment;
        }
        throw new IllegalArgumentException("Required value was null.".toString());
    }

    public static final void w(Fragment fragment) {
        kotlin.jvm.internal.i.f(fragment, "$this$keepNestedFragmentsViews");
        a(fragment, true, bgF);
    }

    @ColorInt
    public static final int a(ViewModel viewModel, @ColorRes int i) {
        kotlin.jvm.internal.i.f(viewModel, "$this$getColor");
        return ContextCompat.getColor(d.Uo(), i);
    }

    public static final void b(ViewGroup viewGroup, boolean z) {
        kotlin.jvm.internal.i.f(viewGroup, "$this$fastEnabled");
        viewGroup.setEnabled(z);
        int childCount = viewGroup.getChildCount();
        for (int i = 0; i < childCount; i++) {
            View childAt = viewGroup.getChildAt(i);
            kotlin.jvm.internal.i.e(childAt, "getChildAt(index)");
            childAt.setEnabled(z);
        }
    }

    @ColorInt
    public static final int f(View view, @ColorRes int i) {
        kotlin.jvm.internal.i.f(view, "$this$getColor");
        return ContextCompat.getColor(view.getContext(), i);
    }

    @ColorInt
    public static final int g(View view, @AttrRes int i) {
        kotlin.jvm.internal.i.f(view, "$this$getColorAttr");
        Context context = view.getContext();
        kotlin.jvm.internal.i.e(context, "context");
        context.getTheme().resolveAttribute(i, bgG, true);
        return bgG.data;
    }

    public static final float h(View view, @DimenRes int i) {
        kotlin.jvm.internal.i.f(view, "$this$getPixels");
        return view.getResources().getDimension(i);
    }

    public static final int i(View view, @DimenRes int i) {
        kotlin.jvm.internal.i.f(view, "$this$getPixelsInt");
        return view.getResources().getDimensionPixelSize(i);
    }

    public static final float g(View view, float f) {
        kotlin.jvm.internal.i.f(view, "$this$toPixels");
        Resources resources = view.getResources();
        kotlin.jvm.internal.i.e(resources, "resources");
        return TypedValue.applyDimension(1, f, resources.getDisplayMetrics());
    }

    public static final int h(View view, float f) {
        kotlin.jvm.internal.i.f(view, "$this$toPixelsInt");
        float g = g(view, f);
        float f2 = (float) null;
        int i = (int) (g >= f2 ? g + 0.5f : g - 0.5f);
        if (i != 0) {
            return i;
        }
        if (f == 0.0f) {
            return 0;
        }
        return f > f2 ? 1 : -1;
    }

    public static final Typeface j(View view, @FontRes int i) {
        kotlin.jvm.internal.i.f(view, "$this$getFont");
        Typeface font = ResourcesCompat.getFont(view.getContext(), i);
        if (font == null) {
            kotlin.jvm.internal.i.bnJ();
        }
        kotlin.jvm.internal.i.e(font, "ResourcesCompat.getFont(context, resId)!!");
        return font;
    }

    public static final Drawable k(View view, @DrawableRes int i) {
        kotlin.jvm.internal.i.f(view, "$this$getDrawable");
        Drawable drawable = ContextCompat.getDrawable(view.getContext(), i);
        if (drawable == null) {
            kotlin.jvm.internal.i.bnJ();
        }
        kotlin.jvm.internal.i.e(drawable, "ContextCompat.getDrawable(context, resId)!!");
        return drawable;
    }

    public static final boolean af(View view) {
        kotlin.jvm.internal.i.f(view, "$this$isVisible");
        return view.getVisibility() == 0;
    }

    public static final boolean ag(View view) {
        kotlin.jvm.internal.i.f(view, "$this$isNotVisible");
        return view.getVisibility() != 0;
    }

    public static final Rect ah(View view) {
        kotlin.jvm.internal.i.f(view, "$this$getGlobalRect");
        int[] iArr = new int[2];
        view.getLocationInWindow(iArr);
        return new Rect(iArr[0], iArr[1], iArr[0] + view.getWidth(), iArr[1] + view.getHeight());
    }

    public static final Point ai(View view) {
        kotlin.jvm.internal.i.f(view, "$this$getGlobalPoint");
        int[] iArr = new int[2];
        view.getLocationOnScreen(iArr);
        return new Point(iArr[0], iArr[1]);
    }

    public static final float aj(View view) {
        kotlin.jvm.internal.i.f(view, "$this$getVisibleByHeight");
        Rect rect = new Rect();
        boolean globalVisibleRect = view.getGlobalVisibleRect(rect);
        int height = rect.height();
        return (!globalVisibleRect || height <= 0) ? 0.0f : ((float) height) / ((float) view.getHeight());
    }

    public static final void l(View view, int i) {
        kotlin.jvm.internal.i.f(view, "$this$setPaddingEnd");
        view.setPadding(view.getPaddingStart(), view.getPaddingTop(), i, view.getPaddingBottom());
    }

    public static final void a(View view, kotlin.jvm.a.a<Boolean> aVar, kotlin.jvm.a.a<l> aVar2) {
        kotlin.jvm.internal.i.f(view, "$this$doOnLayout");
        kotlin.jvm.internal.i.f(aVar, "condition");
        kotlin.jvm.internal.i.f(aVar2, "action");
        if (((Boolean) aVar.invoke()).booleanValue()) {
            aVar2.invoke();
        } else {
            view.getViewTreeObserver().addOnGlobalLayoutListener(new a(view, aVar, aVar2));
        }
    }

    public static final void a(View view, kotlin.jvm.a.b<? super View, l> bVar) {
        kotlin.jvm.internal.i.f(view, "$this$setOnDelayedClickListener");
        kotlin.jvm.internal.i.f(bVar, "block");
        view.setOnClickListener(new b(bVar));
    }

    public static final int a(RecyclerView recyclerView, int i) {
        kotlin.jvm.internal.i.f(recyclerView, "$this$getPosition");
        return recyclerView.getChildAdapterPosition(recyclerView.getChildAt(i));
    }

    public static final ViewHolder b(RecyclerView recyclerView, int i) {
        kotlin.jvm.internal.i.f(recyclerView, "$this$getViewHolder");
        return recyclerView.getChildViewHolder(recyclerView.getChildAt(i));
    }

    public static final void b(RecyclerView recyclerView) {
        kotlin.jvm.internal.i.f(recyclerView, "$this$disableChangeAnimations");
        ItemAnimator itemAnimator = recyclerView.getItemAnimator();
        if (itemAnimator != null) {
            ((DefaultItemAnimator) itemAnimator).setSupportsChangeAnimations(false);
            return;
        }
        throw new TypeCastException("null cannot be cast to non-null type androidx.recyclerview.widget.DefaultItemAnimator");
    }

    @ColorInt
    public static final int b(ViewHolder viewHolder, @ColorRes int i) {
        kotlin.jvm.internal.i.f(viewHolder, "$this$getColor");
        View view = viewHolder.itemView;
        kotlin.jvm.internal.i.e(view, "itemView");
        return f(view, i);
    }

    public static final float c(ViewHolder viewHolder, @DimenRes int i) {
        kotlin.jvm.internal.i.f(viewHolder, "$this$getPixels");
        View view = viewHolder.itemView;
        kotlin.jvm.internal.i.e(view, "itemView");
        return h(view, i);
    }

    public static final Typeface d(ViewHolder viewHolder, @FontRes int i) {
        kotlin.jvm.internal.i.f(viewHolder, "$this$getFont");
        View view = viewHolder.itemView;
        kotlin.jvm.internal.i.e(view, "itemView");
        return j(view, i);
    }

    public static final Drawable e(ViewHolder viewHolder, @DrawableRes int i) {
        kotlin.jvm.internal.i.f(viewHolder, "$this$getDrawable");
        View view = viewHolder.itemView;
        kotlin.jvm.internal.i.e(view, "itemView");
        return k(view, i);
    }

    @ColorInt
    public static final int a(ViewDataBinding viewDataBinding, @ColorRes int i) {
        kotlin.jvm.internal.i.f(viewDataBinding, "$this$getColor");
        View root = viewDataBinding.getRoot();
        kotlin.jvm.internal.i.e(root, "root");
        return f(root, i);
    }

    public static final float b(ViewDataBinding viewDataBinding, @DimenRes int i) {
        kotlin.jvm.internal.i.f(viewDataBinding, "$this$getPixels");
        View root = viewDataBinding.getRoot();
        kotlin.jvm.internal.i.e(root, "root");
        return h(root, i);
    }

    public static final int c(ViewDataBinding viewDataBinding, @DimenRes int i) {
        kotlin.jvm.internal.i.f(viewDataBinding, "$this$getPixelsInt");
        View root = viewDataBinding.getRoot();
        kotlin.jvm.internal.i.e(root, "root");
        return i(root, i);
    }

    public static final Typeface d(ViewDataBinding viewDataBinding, @FontRes int i) {
        kotlin.jvm.internal.i.f(viewDataBinding, "$this$getFont");
        View root = viewDataBinding.getRoot();
        kotlin.jvm.internal.i.e(root, "root");
        return j(root, i);
    }

    public static final Drawable e(ViewDataBinding viewDataBinding, @DrawableRes int i) {
        kotlin.jvm.internal.i.f(viewDataBinding, "$this$getDrawable");
        View root = viewDataBinding.getRoot();
        kotlin.jvm.internal.i.e(root, "root");
        return k(root, i);
    }

    public static final void d(TextView textView, @DrawableRes int i) {
        kotlin.jvm.internal.i.f(textView, "$this$setDrawableTop");
        textView.setCompoundDrawablesWithIntrinsicBounds(0, i, 0, 0);
    }

    public static final LayoutParams l(int i, int i2, int i3) {
        return new LayoutParams(i, i2, i3);
    }

    public static final <T extends ViewDataBinding> T a(Fragment fragment, int i, ViewGroup viewGroup, boolean z) {
        kotlin.jvm.internal.i.f(fragment, "$this$inflateBinding");
        LayoutInflater from = LayoutInflater.from(fragment.getContext());
        kotlin.jvm.internal.i.e(from, "LayoutInflater.from(context)");
        return a(from, i, viewGroup, z);
    }

    public static final <T extends ViewDataBinding> T a(View view, int i, ViewGroup viewGroup, boolean z) {
        kotlin.jvm.internal.i.f(view, "$this$inflateBinding");
        LayoutInflater from = LayoutInflater.from(view.getContext());
        kotlin.jvm.internal.i.e(from, "LayoutInflater.from(context)");
        return a(from, i, viewGroup, z);
    }

    public static final <T extends ViewDataBinding> T a(ViewGroup viewGroup, int i, ViewGroup viewGroup2, boolean z) {
        kotlin.jvm.internal.i.f(viewGroup, "$this$inflateBinding");
        kotlin.jvm.internal.i.f(viewGroup2, "parent");
        LayoutInflater from = LayoutInflater.from(viewGroup.getContext());
        kotlin.jvm.internal.i.e(from, "LayoutInflater.from(context)");
        return a(from, i, viewGroup2, z);
    }

    public static final <T extends ViewDataBinding> T a(Context context, int i, ViewGroup viewGroup, boolean z) {
        kotlin.jvm.internal.i.f(context, "$this$inflateBinding");
        LayoutInflater from = LayoutInflater.from(context);
        kotlin.jvm.internal.i.e(from, "LayoutInflater.from(this)");
        return a(from, i, viewGroup, z);
    }

    public static final <T extends ViewDataBinding> T a(LayoutInflater layoutInflater, int i, ViewGroup viewGroup, boolean z) {
        kotlin.jvm.internal.i.f(layoutInflater, "$this$inflateBinding");
        ViewDataBinding inflate = DataBindingUtil.inflate(layoutInflater, i, viewGroup, z);
        kotlin.jvm.internal.i.e(inflate, "DataBindingUtil.inflate(…es, parent, attachToRoot)");
        return inflate;
    }

    public static /* synthetic */ View b(ViewGroup viewGroup, int i, ViewGroup viewGroup2, boolean z, int i2, Object obj) {
        if ((i2 & 2) != 0) {
            viewGroup2 = viewGroup;
        }
        if ((i2 & 4) != 0) {
            z = false;
        }
        return b(viewGroup, i, viewGroup2, z);
    }

    public static final <T extends View> T b(ViewGroup viewGroup, int i, ViewGroup viewGroup2, boolean z) {
        kotlin.jvm.internal.i.f(viewGroup, "$this$inflateView");
        kotlin.jvm.internal.i.f(viewGroup2, "parent");
        View inflate = LayoutInflater.from(viewGroup.getContext()).inflate(i, viewGroup2, z);
        if (inflate != null) {
            return inflate;
        }
        throw new TypeCastException("null cannot be cast to non-null type T");
    }

    public static final void ak(View view) {
        kotlin.jvm.internal.i.f(view, "$this$show");
        view.setVisibility(0);
    }

    public static final void hide(View view) {
        kotlin.jvm.internal.i.f(view, "$this$hide");
        view.setVisibility(4);
    }

    public static final void al(View view) {
        kotlin.jvm.internal.i.f(view, "$this$gone");
        view.setVisibility(8);
    }

    public static final void d(View view, boolean z) {
        kotlin.jvm.internal.i.f(view, "$this$visible");
        view.setVisibility(z ? 0 : 8);
    }

    public static final boolean am(View view) {
        kotlin.jvm.internal.i.f(view, "$this$isGone");
        return view.getVisibility() == 8;
    }

    public static final <T> void a(MutableLiveData<T> mutableLiveData, T t) {
        kotlin.jvm.internal.i.f(mutableLiveData, "$this$setValueIfDiffers");
        if ((kotlin.jvm.internal.i.y(mutableLiveData.getValue(), t) ^ 1) != 0) {
            mutableLiveData.setValue(t);
        }
    }

    public static final <T> void b(MutableLiveData<T> mutableLiveData, T t) {
        kotlin.jvm.internal.i.f(mutableLiveData, "$this$postValueIfDiffers");
        if ((kotlin.jvm.internal.i.y(mutableLiveData.getValue(), t) ^ 1) != 0) {
            mutableLiveData.postValue(t);
        }
    }

    public static final <T> void c(MutableLiveData<T> mutableLiveData, T t) {
        kotlin.jvm.internal.i.f(mutableLiveData, "$this$setThenClear");
        mutableLiveData.setValue(t);
        mutableLiveData.postValue(null);
    }

    public static final <T> void d(MutableLiveData<T> mutableLiveData, T t) {
        kotlin.jvm.internal.i.f(mutableLiveData, "$this$setOrPost");
        if (isMainThread()) {
            mutableLiveData.setValue(t);
        } else {
            mutableLiveData.postValue(t);
        }
    }

    public static final <T> void a(c<T> cVar, T t) {
        kotlin.jvm.internal.i.f(cVar, "$this$setValueIfDiffers");
        if ((kotlin.jvm.internal.i.y(cVar.getValue(), t) ^ 1) != 0) {
            cVar.setValue(t);
        }
    }

    public static final <T> void b(c<T> cVar, T t) {
        kotlin.jvm.internal.i.f(cVar, "$this$postValueIfDiffers");
        if ((kotlin.jvm.internal.i.y(cVar.getValue(), t) ^ 1) != 0) {
            cVar.postValue(t);
        }
    }

    public static final boolean isMainThread() {
        Looper mainLooper = Looper.getMainLooper();
        kotlin.jvm.internal.i.e(mainLooper, "Looper.getMainLooper()");
        return mainLooper.getThread() == Thread.currentThread();
    }

    public static final void c(EditText editText) {
        kotlin.jvm.internal.i.f(editText, "$this$moveCursorToTheEnd");
        editText.setSelection(editText.length());
    }

    public static final void i(View view, float f) {
        kotlin.jvm.internal.i.f(view, "$this$setScale");
        view.setScaleX(f);
        view.setScaleY(f);
    }

    public static final void a(TextView textView, Drawable drawable) {
        kotlin.jvm.internal.i.f(textView, "$this$startDrawableWithBounds");
        Drawable[] compoundDrawablesRelative = textView.getCompoundDrawablesRelative();
        textView.setCompoundDrawablesRelativeWithIntrinsicBounds(drawable, compoundDrawablesRelative[1], compoundDrawablesRelative[2], compoundDrawablesRelative[3]);
    }

    public static final void b(TextView textView, Drawable drawable) {
        kotlin.jvm.internal.i.f(textView, "$this$endDrawableWithBounds");
        Drawable[] compoundDrawablesRelative = textView.getCompoundDrawablesRelative();
        textView.setCompoundDrawablesRelativeWithIntrinsicBounds(compoundDrawablesRelative[0], compoundDrawablesRelative[1], drawable, compoundDrawablesRelative[3]);
    }

    public static final Drawable h(TextView textView) {
        kotlin.jvm.internal.i.f(textView, "$this$startDrawable");
        return textView.getCompoundDrawablesRelative()[0];
    }

    public static final void c(TextView textView, Drawable drawable) {
        kotlin.jvm.internal.i.f(textView, "$this$startDrawable");
        Drawable[] compoundDrawablesRelative = textView.getCompoundDrawablesRelative();
        textView.setCompoundDrawablesRelative(drawable, compoundDrawablesRelative[1], compoundDrawablesRelative[2], compoundDrawablesRelative[3]);
    }

    public static final Drawable i(TextView textView) {
        kotlin.jvm.internal.i.f(textView, "$this$endDrawable");
        return textView.getCompoundDrawablesRelative()[2];
    }

    public static final void d(TextView textView, Drawable drawable) {
        kotlin.jvm.internal.i.f(textView, "$this$endDrawable");
        Drawable[] compoundDrawables = textView.getCompoundDrawables();
        textView.setCompoundDrawablesRelative(compoundDrawables[0], compoundDrawables[1], drawable, compoundDrawables[3]);
    }

    public static final void a(EditText editText, InputFilter inputFilter) {
        kotlin.jvm.internal.i.f(editText, "$this$addFilter");
        kotlin.jvm.internal.i.f(inputFilter, "filter");
        InputFilter[] filters = editText.getFilters();
        kotlin.jvm.internal.i.e(filters, "filters");
        List F = i.F(filters);
        F.add(inputFilter);
        Collection collection = F;
        if (collection != null) {
            Object[] toArray = collection.toArray(new InputFilter[0]);
            if (toArray != null) {
                editText.setFilters((InputFilter[]) toArray);
                return;
            }
            throw new TypeCastException("null cannot be cast to non-null type kotlin.Array<T>");
        }
        throw new TypeCastException("null cannot be cast to non-null type java.util.Collection<T>");
    }

    public static final void d(EditText editText) {
        kotlin.jvm.internal.i.f(editText, "$this$setCursorToEnd");
        editText.setSelection(editText.getText().length());
    }

    public static final void a(Animator animator, long j) {
        float f;
        kotlin.jvm.internal.i.f(animator, "$this$safeDuration");
        try {
            f = Global.getFloat(d.Um().getContext().getContentResolver(), "animator_duration_scale", 1.0f);
        } catch (Throwable unused) {
            f = 0.0f;
        }
        if (f != 0.0f) {
            animator.setDuration(j);
        }
    }

    public static final boolean fP(String str) {
        kotlin.jvm.internal.i.f(str, "permission");
        return ContextCompat.checkSelfPermission(d.Um().getContext(), str) == 0;
    }

    public static final <T extends ViewDataBinding> T findBinding(View view) {
        kotlin.jvm.internal.i.f(view, "$this$findBinding");
        ViewDataBinding findBinding = DataBindingUtil.findBinding(view);
        if (findBinding == null) {
            kotlin.jvm.internal.i.bnJ();
        }
        return findBinding;
    }

    public static final boolean Xe() {
        return VERSION.SDK_INT >= 26;
    }

    public static final boolean Xf() {
        return VERSION.SDK_INT >= 28;
    }

    public static final NotificationManager bb(Context context) {
        kotlin.jvm.internal.i.f(context, "$this$notificationManager");
        Object systemService = context.getSystemService("notification");
        if (systemService != null) {
            return (NotificationManager) systemService;
        }
        throw new TypeCastException("null cannot be cast to non-null type android.app.NotificationManager");
    }

    public static final DownloadManager bc(Context context) {
        kotlin.jvm.internal.i.f(context, "$this$downloadManager");
        Object systemService = context.getSystemService("download");
        if (systemService != null) {
            return (DownloadManager) systemService;
        }
        throw new TypeCastException("null cannot be cast to non-null type android.app.DownloadManager");
    }

    public static final ConnectivityManager bd(Context context) {
        kotlin.jvm.internal.i.f(context, "$this$connectivityManager");
        Object systemService = context.getSystemService("connectivity");
        if (systemService != null) {
            return (ConnectivityManager) systemService;
        }
        throw new TypeCastException("null cannot be cast to non-null type android.net.ConnectivityManager");
    }

    public static final Bitmap a(Bitmap bitmap, float f, float f2, boolean z) {
        kotlin.jvm.internal.i.f(bitmap, "$this$scale");
        matrix.reset();
        matrix.preScale(f, f2);
        Bitmap createBitmap = Bitmap.createBitmap(bitmap, 0, 0, bitmap.getWidth(), bitmap.getHeight(), matrix, true);
        if (z) {
            bitmap.recycle();
        }
        kotlin.jvm.internal.i.e(createBitmap, "scaled");
        return createBitmap;
    }

    public static final Bitmap a(Bitmap bitmap, int i, int i2, boolean z) {
        kotlin.jvm.internal.i.f(bitmap, "$this$scaleAspectRatioMin");
        float min = Math.min(((float) i) / ((float) bitmap.getWidth()), ((float) i2) / ((float) bitmap.getHeight()));
        return a(bitmap, min, min, z);
    }

    public static final Drawable wrap(Drawable drawable) {
        kotlin.jvm.internal.i.f(drawable, "$this$wrap");
        drawable = DrawableCompat.wrap(drawable.mutate());
        kotlin.jvm.internal.i.e(drawable, "DrawableCompat.wrap(mutate())");
        return drawable;
    }

    public static final Drawable a(Drawable drawable, @ColorInt int i) {
        kotlin.jvm.internal.i.f(drawable, "$this$tint");
        drawable = wrap(drawable);
        DrawableCompat.setTint(drawable, i);
        return drawable;
    }

    public static final Drawable a(Drawable drawable, ColorStateList colorStateList) {
        kotlin.jvm.internal.i.f(drawable, "$this$tint");
        drawable = wrap(drawable);
        DrawableCompat.setTintList(drawable, colorStateList);
        return drawable;
    }

    public static final Editor a(Editor editor, String str, Integer num) {
        kotlin.jvm.internal.i.f(editor, "$this$putIntOrClear");
        kotlin.jvm.internal.i.f(str, "key");
        if (num != null) {
            editor.putInt(str, num.intValue());
        } else {
            editor.remove(str);
        }
        return editor;
    }

    public static final Integer d(SharedPreferences sharedPreferences, String str) {
        kotlin.jvm.internal.i.f(sharedPreferences, "$this$getIntOrNull");
        kotlin.jvm.internal.i.f(str, "key");
        return sharedPreferences.contains(str) ? Integer.valueOf(sharedPreferences.getInt(str, -1)) : null;
    }

    public static final Long e(SharedPreferences sharedPreferences, String str) {
        kotlin.jvm.internal.i.f(sharedPreferences, "$this$getLongOrNull");
        kotlin.jvm.internal.i.f(str, "key");
        return sharedPreferences.contains(str) ? Long.valueOf(sharedPreferences.getLong(str, -1)) : null;
    }

    public static final int eJ(int i) {
        return c.ah(i, 8);
    }

    public static final int eK(int i) {
        return c.ai(i, 8);
    }

    public static final int fQ(String str) {
        kotlin.jvm.internal.i.f(str, "$this$toColor");
        return (int) Long.parseLong(str);
    }

    public static final Integer fR(String str) {
        kotlin.jvm.internal.i.f(str, "$this$parseColor");
        try {
            return Integer.valueOf(Color.parseColor(str));
        } catch (Exception unused) {
            return null;
        }
    }

    public static final int h(Rect rect) {
        kotlin.jvm.internal.i.f(rect, "$this$component1");
        return rect.left;
    }

    public static final int i(Rect rect) {
        kotlin.jvm.internal.i.f(rect, "$this$component3");
        return rect.right;
    }

    public static final int j(Rect rect) {
        kotlin.jvm.internal.i.f(rect, "$this$component4");
        return rect.bottom;
    }

    public static final int a(DisplayMetrics displayMetrics) {
        kotlin.jvm.internal.i.f(displayMetrics, "$this$component1");
        return displayMetrics.widthPixels;
    }

    public static final int b(DisplayMetrics displayMetrics) {
        kotlin.jvm.internal.i.f(displayMetrics, "$this$component2");
        return displayMetrics.heightPixels;
    }

    public static final void an(View view) {
        kotlin.jvm.internal.i.f(view, "$this$measureInDisplay");
        Resources resources = view.getResources();
        kotlin.jvm.internal.i.e(resources, "resources");
        DisplayMetrics displayMetrics = resources.getDisplayMetrics();
        c(view, a(displayMetrics), b(displayMetrics));
    }

    public static final void c(View view, int i, int i2) {
        kotlin.jvm.internal.i.f(view, "$this$measureInBox");
        view.measure(MeasureSpec.makeMeasureSpec(i, Integer.MIN_VALUE), MeasureSpec.makeMeasureSpec(i2, Integer.MIN_VALUE));
    }

    public static final <T extends Parcelable> Set<T> g(Parcel parcel, ClassLoader classLoader) {
        kotlin.jvm.internal.i.f(parcel, "$this$readTypedSet");
        int readInt = parcel.readInt();
        if (readInt == -1) {
            return null;
        }
        Set linkedHashSet = new LinkedHashSet();
        for (int i = 0; i < readInt; i++) {
            Parcelable readParcelable = parcel.readParcelable(classLoader);
            if (readParcelable == null) {
                kotlin.jvm.internal.i.bnJ();
            }
            linkedHashSet.add(readParcelable);
        }
        return linkedHashSet;
    }

    public static final <T extends Parcelable> void a(Parcel parcel, Set<? extends T> set, int i) {
        kotlin.jvm.internal.i.f(parcel, "$this$writeTypedSet");
        parcel.writeInt(set != null ? set.size() : -1);
        if (set != null) {
            Iterator it = set.iterator();
            while (it.hasNext()) {
                parcel.writeParcelable((Parcelable) it.next(), i);
            }
        }
    }

    public static final int makeMeasureSpec(int i, int i2) {
        return MeasureSpec.makeMeasureSpec(i, i2);
    }

    public static final void a(ImageView imageView, int i) {
        kotlin.jvm.internal.i.f(imageView, "$this$setImageTint");
        ImageViewCompat.setImageTintList(imageView, ColorStateList.valueOf(i));
    }

    public static final Application a(AndroidViewModel androidViewModel) {
        kotlin.jvm.internal.i.f(androidViewModel, "$this$context");
        Application application = androidViewModel.getApplication();
        kotlin.jvm.internal.i.e(application, "getApplication<Application>()");
        return application;
    }

    public static final void a(View[] viewArr, OnClickListener onClickListener) {
        kotlin.jvm.internal.i.f(viewArr, "$this$setOnClickListener");
        kotlin.jvm.internal.i.f(onClickListener, CastExtraArgs.LISTENER);
        for (View onClickListener2 : viewArr) {
            onClickListener2.setOnClickListener(onClickListener);
        }
    }

    public static final void b(View[] viewArr, boolean z) {
        kotlin.jvm.internal.i.f(viewArr, "$this$visible");
        for (View d : viewArr) {
            d(d, z);
        }
    }
}
