package com.pro100svitlo.creditCardNfcReader.iso7816emv;

import androidx.room.RoomMasterTable;
import com.pro100svitlo.creditCardNfcReader.enums.TagValueTypeEnum;
import com.pro100svitlo.creditCardNfcReader.iso7816emv.a.a;
import java.lang.reflect.Field;
import java.util.LinkedHashMap;

/* compiled from: EmvTags */
public final class b {
    public static final ITag eCA = new a("57", TagValueTypeEnum.BINARY, "Track 2 Equivalent Data", "Contains the data elements of track 2 according to ISO/IEC 7813, excluding start sentinel, end sentinel, and Longitudinal Redundancy Check (LRC)");
    public static final ITag eCB = new a("5a", TagValueTypeEnum.NUMERIC, "Application Primary Account Number (PAN)", "Valid cardholder account number");
    public static final ITag eCC = new a("70", TagValueTypeEnum.BINARY, "Record Template (EMV Proprietary)", "Template proprietary to the EMV specification");
    public static final ITag eCD = new a("71", TagValueTypeEnum.BINARY, "Issuer Script Template 1", "Contains proprietary issuer data for transmission to the ICC before the second GENERATE AC command");
    public static final ITag eCE = new a("72", TagValueTypeEnum.BINARY, "Issuer Script Template 2", "Contains proprietary issuer data for transmission to the ICC after the second GENERATE AC command");
    public static final ITag eCF = new a("77", TagValueTypeEnum.BINARY, "Response Message Template Format 2", "Contains the data objects (with tags and lengths) returned by the ICC in response to a command");
    public static final ITag eCG = new a("80", TagValueTypeEnum.BINARY, "Response Message Template Format 1", "Contains the data objects (without tags and lengths) returned by the ICC in response to a command");
    public static final ITag eCH;
    public static final ITag eCI = new a("82", TagValueTypeEnum.BINARY, "Application Interchange Profile", "Indicates the capabilities of the card to support specific functions in the application");
    public static final ITag eCJ = new a("83", TagValueTypeEnum.BINARY, "Command Template", "Identifies the data field of a command message");
    public static final ITag eCK = new a("86", TagValueTypeEnum.BINARY, "Issuer Script Command", "Contains a command for transmission to the ICC");
    public static final ITag eCL = new a("87", TagValueTypeEnum.BINARY, "Application Priority Indicator", "Indicates the priority of a given application or group of applications in a directory");
    public static final ITag eCM = new a("89", TagValueTypeEnum.BINARY, "Authorisation Code", "Value generated by the authorisation authority for an approved transaction");
    public static final ITag eCN = new a("8a", TagValueTypeEnum.TEXT, "Authorisation Response Code", "Code that defines the disposition of a message");
    public static final ITag eCO = new a("8c", TagValueTypeEnum.DOL, "Card Risk Management Data Object List 1 (CDOL1)", "List of data objects (tag and length) to be passed to the ICC in the first GENERATE AC command");
    public static final ITag eCP = new a("8d", TagValueTypeEnum.DOL, "Card Risk Management Data Object List 2 (CDOL2)", "List of data objects (tag and length) to be passed to the ICC in the second GENERATE AC command");
    public static final ITag eCQ = new a("8e", TagValueTypeEnum.BINARY, "Cardholder Verification Method (CVM) List", "Identifies a method of verification of the cardholder supported by the application");
    public static final ITag eCR;
    public static final ITag eCS = new a("90", TagValueTypeEnum.BINARY, "Issuer Public Key Certificate", "Issuer public key certified by a certification authority");
    public static final ITag eCT = new a("91", TagValueTypeEnum.BINARY, "Issuer Authentication Data", "Data sent to the ICC for online issuer authentication");
    public static final ITag eCU = new a("92", TagValueTypeEnum.BINARY, "Issuer Public Key Remainder", "Remaining digits of the Issuer Public Key Modulus");
    public static final ITag eCV = new a("93", TagValueTypeEnum.BINARY, "Signed Static Application Data", "Digital signature on critical application parameters for SDA");
    public static final ITag eCW = new a("94", TagValueTypeEnum.BINARY, "Application File Locator (AFL)", "Indicates the location (SFI, range of records) of the AEFs related to a given application");
    public static final ITag eCX = new a("95", TagValueTypeEnum.BINARY, "Terminal Verification Results (TVR)", "Status of the different functions as seen from the terminal");
    public static final ITag eCY = new a("97", TagValueTypeEnum.BINARY, "Transaction Certificate Data Object List (TDOL)", "List of data objects (tag and length) to be used by the terminal in generating the TC Hash Value");
    public static final ITag eCZ = new a("98", TagValueTypeEnum.BINARY, "Transaction Certificate (TC) Hash Value", "Result of a hash function specified in Book 2, Annex B3.1");
    private static LinkedHashMap<a, ITag> eCk = new LinkedHashMap();
    public static final ITag eCl = new a("06", TagValueTypeEnum.BINARY, "Object Identifier (OID)", "Universal tag for OID");
    public static final ITag eCm = new a("41", TagValueTypeEnum.NUMERIC, "Country Code", "Country code (encoding specified in ISO 3166-1) and optional national data");
    public static final ITag eCn = new a(RoomMasterTable.DEFAULT_ID, TagValueTypeEnum.NUMERIC, "Issuer Identification Number (IIN)", "The number that identifies the major industry and the card issuer and that forms the first part of the Primary Account Number (PAN)");
    public static final ITag eCo;
    public static final ITag eCp = new a("50", TagValueTypeEnum.TEXT, "Application Label", "Mnemonic associated with the AID according to ISO/IEC 7816-5");
    public static final ITag eCq = new a("51", TagValueTypeEnum.BINARY, "File reference data element", "ISO-7816 Path");
    public static final ITag eCr;
    public static final ITag eCs;
    public static final ITag eCt = new a("61", TagValueTypeEnum.BINARY, "Application Template", "Contains one or more data objects relevant to an application directory entry according to ISO/IEC 7816-5");
    public static final ITag eCu = new a("6f", TagValueTypeEnum.BINARY, "File Control Information (FCI) Template", "Set of file control parameters and file management data (according to ISO/IEC 7816-4)");
    public static final ITag eCv = new a("73", TagValueTypeEnum.BINARY, "Directory Discretionary Template", "Issuer discretionary part of the directory according to ISO/IEC 7816-5");
    public static final ITag eCw = new a("84", TagValueTypeEnum.BINARY, "Dedicated File (DF) Name", "Identifies the name of the DF as described in ISO/IEC 7816-4");
    public static final ITag eCx = new a("88", TagValueTypeEnum.BINARY, "Short File Identifier (SFI)", "Identifies the SFI to be used in the commands related to a given AEF or DDF. The SFI data object is a binary field with the three high order bits set to zero");
    public static final ITag eCy = new a("a5", TagValueTypeEnum.BINARY, "File Control Information (FCI) Proprietary Template", "Identifies the data object proprietary to this specification in the FCI template according to ISO/IEC 7816-4");
    public static final ITag eCz = new a("5f50", TagValueTypeEnum.TEXT, "Issuer URL", "The URL provides the location of the Issuerâ€™s Library Server on the Internet");
    public static final ITag eDA;
    public static final ITag eDB = new a("9f0b", TagValueTypeEnum.TEXT, "Cardholder Name Extended", "Indicates the whole cardholder name when greater than 26 characters using the same coding convention as in ISO 7813");
    public static final ITag eDC = new a("9f0d", TagValueTypeEnum.BINARY, "Issuer Action Code - Default", "Specifies the issuerâ€™s conditions that cause a transaction to be rejected if it might have been approved online, but the terminal is unable to process the transaction online");
    public static final ITag eDD = new a("9f0e", TagValueTypeEnum.BINARY, "Issuer Action Code - Denial", "Specifies the issuerâ€™s conditions that cause the denial of a transaction without attempt to go online");
    public static final ITag eDE = new a("9f0f", TagValueTypeEnum.BINARY, "Issuer Action Code - Online", "Specifies the issuerâ€™s conditions that cause a transaction to be transmitted online");
    public static final ITag eDF = new a("9f10", TagValueTypeEnum.BINARY, "Issuer Application Data", "Contains proprietary application data for transmission to the issuer in an online transaction");
    public static final ITag eDG = new a("9f11", TagValueTypeEnum.NUMERIC, "Issuer Code Table Index", "Indicates the code table according to ISO/IEC 8859 for displaying the Application Preferred Name");
    public static final ITag eDH = new a("9f12", TagValueTypeEnum.TEXT, "Application Preferred Name", "Preferred mnemonic associated with the AID");
    public static final ITag eDI = new a("9f13", TagValueTypeEnum.BINARY, "Last Online Application Transaction Counter (ATC) Register", "ATC value of the last transaction that went online");
    public static final ITag eDJ = new a("9f14", TagValueTypeEnum.BINARY, "Lower Consecutive Offline Limit", "Issuer-specified preference for the maximum number of consecutive offline transactions for this ICC application allowed in a terminal with online capability");
    public static final ITag eDK = new a("9f15", TagValueTypeEnum.NUMERIC, "Merchant Category Code", "Classifies the type of business being done by the merchant, represented according to ISO 8583:1993 for Card Acceptor Business Code");
    public static final ITag eDL = new a("9f16", TagValueTypeEnum.TEXT, "Merchant Identifier", "When concatenated with the Acquirer Identifier, uniquely identifies a given merchant");
    public static final ITag eDM = new a("9f17", TagValueTypeEnum.BINARY, "Personal Identification Number (PIN) Try Counter", "Number of PIN tries remaining");
    public static final ITag eDN = new a("9f18", TagValueTypeEnum.BINARY, "Issuer Script Identifier", "Identification of the Issuer Script");
    public static final ITag eDO = new a("9f1a", TagValueTypeEnum.TEXT, "Terminal Country Code", "Indicates the country of the terminal, represented according to ISO 3166");
    public static final ITag eDP = new a("9f1b", TagValueTypeEnum.BINARY, "Terminal Floor Limit", "Indicates the floor limit in the terminal in conjunction with the AID");
    public static final ITag eDQ = new a("9f1c", TagValueTypeEnum.TEXT, "Terminal Identification", "Designates the unique location of a terminal at a merchant");
    public static final ITag eDR = new a("9f1d", TagValueTypeEnum.BINARY, "Terminal Risk Management Data", "Application-specific value used by the card for risk management purposes");
    public static final ITag eDS = new a("9f1e", TagValueTypeEnum.TEXT, "Interface Device (IFD) Serial Number", "Unique and permanent serial number assigned to the IFD by the manufacturer");
    public static final ITag eDT = new a("9f1f", TagValueTypeEnum.TEXT, "[Magnetic Stripe] Track 1 Discretionary Data", "Discretionary part of track 1 according to ISO/IEC 7813");
    public static final ITag eDU = new a("9f20", TagValueTypeEnum.TEXT, "[Magnetic Stripe] Track 2 Discretionary Data", "Discretionary part of track 2 according to ISO/IEC 7813");
    public static final ITag eDV = new a("9f21", TagValueTypeEnum.NUMERIC, "Transaction Time (HHMMSS)", "Local time that the transaction was authorised");
    public static final ITag eDW;
    public static final ITag eDX = new a("9f23", TagValueTypeEnum.BINARY, "Upper Consecutive Offline Limit", "Issuer-specified preference for the maximum number of consecutive offline transactions for this ICC application allowed in a terminal without online capability");
    public static final ITag eDY = new a("9f26", TagValueTypeEnum.BINARY, "Application Cryptogram", "Cryptogram returned by the ICC in response of the GENERATE AC command");
    public static final ITag eDZ = new a("9f27", TagValueTypeEnum.BINARY, "Cryptogram Information Data", "Indicates the type of cryptogram and the actions to be performed by the terminal");
    public static final ITag eDa = new a("99", TagValueTypeEnum.BINARY, "Transaction Personal Identification Number (PIN) Data", "Data entered by the cardholder for the purpose of the PIN verification");
    public static final ITag eDb = new a("9a", TagValueTypeEnum.NUMERIC, "Transaction Date", "Local date that the transaction was authorised");
    public static final ITag eDc = new a("9b", TagValueTypeEnum.BINARY, "Transaction Status Information", "Indicates the functions performed in a transaction");
    public static final ITag eDd = new a("9c", TagValueTypeEnum.NUMERIC, "Transaction Type", "Indicates the type of financial transaction, represented by the first two digits of ISO 8583:1987 Processing Code");
    public static final ITag eDe = new a("9d", TagValueTypeEnum.BINARY, "Directory Definition File (DDF) Name", "Identifies the name of a DF associated with a directory");
    public static final ITag eDf = new a("5f20", TagValueTypeEnum.TEXT, "Cardholder Name", "Indicates cardholder name according to ISO 7813");
    public static final ITag eDg = new a("5f24", TagValueTypeEnum.NUMERIC, "Application Expiration Date", "Date after which application expires");
    public static final ITag eDh = new a("5f25", TagValueTypeEnum.NUMERIC, "Application Effective Date", "Date from which the application may be used");
    public static final ITag eDi = new a("5f28", TagValueTypeEnum.NUMERIC, "Issuer Country Code", "Indicates the country of the issuer according to ISO 3166");
    public static final ITag eDj = new a("5f2a", TagValueTypeEnum.TEXT, "Transaction Currency Code", "Indicates the currency code of the transaction according to ISO 4217");
    public static final ITag eDk = new a("5f2d", TagValueTypeEnum.TEXT, "Language Preference", "1â€“4 languages stored in order of preference, each represented by 2 alphabetical characters according to ISO 639");
    public static final ITag eDl = new a("5f30", TagValueTypeEnum.NUMERIC, "Service Code", "Service code as defined in ISO/IEC 7813 for track 1 and track 2");
    public static final ITag eDm = new a("5f34", TagValueTypeEnum.NUMERIC, "Application Primary Account Number (PAN) Sequence Number", "Identifies and differentiates cards with the same PAN");
    public static final ITag eDn = new a("5f36", TagValueTypeEnum.NUMERIC, "Transaction Currency Exponent", "Indicates the implied position of the decimal point from the right of the transaction amount represented according to ISO 4217");
    public static final ITag eDo = new a("5f53", TagValueTypeEnum.BINARY, "International Bank Account Number (IBAN)", "Uniquely identifies the account of a customer at a financial institution as defined in ISO 13616");
    public static final ITag eDp = new a("5f54", TagValueTypeEnum.MIXED, "Bank Identifier Code (BIC)", "Uniquely identifies a bank as defined in ISO 9362");
    public static final ITag eDq = new a("5f55", TagValueTypeEnum.TEXT, "Issuer Country Code (alpha2 format)", "Indicates the country of the issuer as defined in ISO 3166 (using a 2 character alphabetic code)");
    public static final ITag eDr = new a("5f56", TagValueTypeEnum.TEXT, "Issuer Country Code (alpha3 format)", "Indicates the country of the issuer as defined in ISO 3166 (using a 3 character alphabetic code)");
    public static final ITag eDs = new a("9f01", TagValueTypeEnum.NUMERIC, "Acquirer Identifier", "Uniquely identifies the acquirer within each payment system");
    public static final ITag eDt;
    public static final ITag eDu;
    public static final ITag eDv;
    public static final ITag eDw = new a("9f05", TagValueTypeEnum.BINARY, "Application Discretionary Data", "Issuer or payment system specified data relating to the application");
    public static final ITag eDx;
    public static final ITag eDy = new a("9f07", TagValueTypeEnum.BINARY, "Application Usage Control", "Indicates issuerâ€™s specified restrictions on the geographic usage and services allowed for the application");
    public static final ITag eDz;
    public static final ITag eEA = new a("9f4b", TagValueTypeEnum.BINARY, "Signed Dynamic Application Data", "Digital signature on critical application parameters for DDA or CDA");
    public static final ITag eEB = new a("9f4c", TagValueTypeEnum.BINARY, "ICC Dynamic Number", "Time-variant number generated by the ICC, to be captured by the terminal");
    public static final ITag eEC = new a("9f4d", TagValueTypeEnum.BINARY, "Log Entry", "Provides the SFI of the Transaction Log file and its number of records");
    public static final ITag eED = new a("9f4e", TagValueTypeEnum.TEXT, "Merchant Name and Location", "Indicates the name and location of the merchant");
    public static final ITag eEE = new a("9f4f", TagValueTypeEnum.DOL, "Log Format", "List (in tag and length format) of data objects representing the logged data elements that are passed to the terminal when a transaction log record is read");
    public static final ITag eEF = new a("bf0c", TagValueTypeEnum.BINARY, "File Control Information (FCI) Issuer Discretionary Data", "Issuer discretionary part of the FCI (e.g. O/S Manufacturer proprietary data)");
    public static final ITag eEG;
    public static final ITag eEH = new a("56", TagValueTypeEnum.BINARY, "Track 1 Data", "Track 1 Data contains the data objects of the track 1 according to [ISO/IEC 7813] Structure B, excluding start sentinel, end sentinel and LRC.");
    public static final ITag eEI = new a("9f66", TagValueTypeEnum.BINARY, "Terminal Transaction Qualifiers", "Provided by the reader in the GPO command and used by the card to determine processing choices based on reader functionality");
    public static final ITag eEJ = new a("9f6b", TagValueTypeEnum.BINARY, "Track 2 Data", "Track 2 Data contains the data objects of the track 2 according to [ISO/IEC 7813] Structure B, excluding start sentinel, end sentinel and LRC.");
    public static final ITag eEK;
    public static final ITag eEL;
    public static final ITag eEM;
    public static final ITag eEN = new a("9f52", TagValueTypeEnum.BINARY, "Upper Cumulative Domestic Offline Transaction Amount", "Issuer specified data element indicating the required maximum cumulative offline amount allowed for the application before the transaction goes online.");
    public static final ITag eEO;
    public static final ITag eEP = new a("9f6c", TagValueTypeEnum.BINARY, "Mag Stripe Application Version Number (Card)", "Must be personalized with the value 0x0001");
    public static final ITag eEQ;
    public static final ITag eER = new a("9f50", TagValueTypeEnum.BINARY, "Offline Accumulator Balance", "Represents the amount of offline spending available in the Card.");
    public static final ITag eES = new a("9f51", TagValueTypeEnum.BINARY, "DRDOL", "A data object in the Card that provides the Kernel with a list of data objects that must be passed to the Card in the data field of the RECOVER AC command");
    public static final ITag eET;
    public static final ITag eEU;
    public static final ITag eEV;
    public static final ITag eEW;
    public static final ITag eEX;
    public static final ITag eEY = new a("9f5d", TagValueTypeEnum.BINARY, "Application Capabilities Information", "Lists a number of card features beyond regular payment");
    public static final ITag eEZ = new a("9f5e", TagValueTypeEnum.BINARY, "Data Storage Identifier", "Constructed as follows: Application PAN (without any 'F' padding) || Application PAN Sequence Number (+ zero padding)");
    public static final ITag eEa = new a("9f2d", TagValueTypeEnum.BINARY, "ICC PIN Encipherment Public Key Certificate", "ICC PIN Encipherment Public Key certified by the issuer");
    public static final ITag eEb = new a("9f2e", TagValueTypeEnum.BINARY, "ICC PIN Encipherment Public Key Exponent", "ICC PIN Encipherment Public Key Exponent used for PIN encipherment");
    public static final ITag eEc = new a("9f2f", TagValueTypeEnum.BINARY, "ICC PIN Encipherment Public Key Remainder", "Remaining digits of the ICC PIN Encipherment Public Key Modulus");
    public static final ITag eEd = new a("9f32", TagValueTypeEnum.BINARY, "Issuer Public Key Exponent", "Issuer public key exponent used for the verification of the Signed Static Application Data and the ICC Public Key Certificate");
    public static final ITag eEe = new a("9f33", TagValueTypeEnum.BINARY, "Terminal Capabilities", "Indicates the card data input, CVM, and security capabilities of the terminal");
    public static final ITag eEf = new a("9f34", TagValueTypeEnum.BINARY, "Cardholder Verification (CVM) Results", "Indicates the results of the last CVM performed");
    public static final ITag eEg = new a("9f35", TagValueTypeEnum.NUMERIC, "Terminal Type", "Indicates the environment of the terminal, its communications capability, and its operational control");
    public static final ITag eEh = new a("9f36", TagValueTypeEnum.BINARY, "Application Transaction Counter (ATC)", "Counter maintained by the application in the ICC (incrementing the ATC is managed by the ICC)");
    public static final ITag eEi = new a("9f37", TagValueTypeEnum.BINARY, "Unpredictable Number", "Value to provide variability and uniqueness to the generation of a cryptogram");
    public static final ITag eEj = new a("9f38", TagValueTypeEnum.DOL, "Processing Options Data Object List (PDOL)", "Contains a list of terminal resident data objects (tags and lengths) needed by the ICC in processing the GET PROCESSING OPTIONS command");
    public static final ITag eEk = new a("9f39", TagValueTypeEnum.NUMERIC, "Point-of-Service (POS) Entry Mode", "Indicates the method by which the PAN was entered, according to the first two digits of the ISO 8583:1987 POS Entry Mode");
    public static final ITag eEl = new a("9f3a", TagValueTypeEnum.BINARY, "Amount, Reference Currency", "Authorised amount expressed in the reference currency");
    public static final ITag eEm = new a("9f3b", TagValueTypeEnum.NUMERIC, "Application Reference Currency", "1â€“4 currency codes used between the terminal and the ICC when the Transaction Currency Code is different from the Application Currency Code; each code is 3 digits according to ISO 4217");
    public static final ITag eEn = new a("9f3c", TagValueTypeEnum.NUMERIC, "Transaction Reference Currency Code", "Code defining the common currency used by the terminal in case the Transaction Currency Code is different from the Application Currency Code");
    public static final ITag eEo = new a("9f3d", TagValueTypeEnum.NUMERIC, "Transaction Reference Currency Exponent", "Indicates the implied position of the decimal point from the right of the transaction amount, with the Transaction Reference Currency Code represented according to ISO 4217");
    public static final ITag eEp = new a("9f40", TagValueTypeEnum.BINARY, "Additional Terminal Capabilities", "Indicates the data input and output capabilities of the terminal");
    public static final ITag eEq = new a("9f41", TagValueTypeEnum.NUMERIC, "Transaction Sequence Counter", "Counter maintained by the terminal that is incremented by one for each transaction");
    public static final ITag eEr = new a("9f42", TagValueTypeEnum.NUMERIC, "Application Currency Code", "Indicates the currency in which the account is managed according to ISO 4217");
    public static final ITag eEs = new a("9f43", TagValueTypeEnum.NUMERIC, "Application Reference Currency Exponent", "Indicates the implied position of the decimal point from the right of the amount, for each of the 1â€“4 reference currencies represented according to ISO 4217");
    public static final ITag eEt = new a("9f44", TagValueTypeEnum.NUMERIC, "Application Currency Exponent", "Indicates the implied position of the decimal point from the right of the amount represented according to ISO 4217");
    public static final ITag eEu = new a("9f45", TagValueTypeEnum.BINARY, "Data Authentication Code", "An issuer assigned value that is retained by the terminal during the verification process of the Signed Static Application Data");
    public static final ITag eEv = new a("9f46", TagValueTypeEnum.BINARY, "ICC Public Key Certificate", "ICC Public Key certified by the issuer");
    public static final ITag eEw = new a("9f47", TagValueTypeEnum.BINARY, "ICC Public Key Exponent", "ICC Public Key Exponent used for the verification of the Signed Dynamic Application Data");
    public static final ITag eEx = new a("9f48", TagValueTypeEnum.BINARY, "ICC Public Key Remainder", "Remaining digits of the ICC Public Key Modulus");
    public static final ITag eEy = new a("9f49", TagValueTypeEnum.DOL, "Dynamic Data Authentication Data Object List (DDOL)", "List of data objects (tag and length) to be passed to the ICC in the INTERNAL AUTHENTICATE command");
    public static final ITag eEz = new a("9f4a", TagValueTypeEnum.BINARY, "Static Data Authentication Tag List", "List of tags of primitive data objects defined in this specification whose value fields are to be included in the Signed Static or Dynamic Application Data");
    public static final ITag eFA;
    public static final ITag eFB;
    public static final ITag eFC;
    public static final ITag eFD;
    public static final ITag eFE;
    public static final ITag eFF;
    public static final ITag eFG;
    public static final ITag eFH;
    public static final ITag eFI;
    public static final ITag eFJ;
    public static final ITag eFK;
    public static final ITag eFL;
    public static final ITag eFM;
    public static final ITag eFN;
    public static final ITag eFO;
    public static final ITag eFP;
    public static final ITag eFQ;
    public static final ITag eFR;
    public static final ITag eFS;
    public static final ITag eFT;
    public static final ITag eFU;
    public static final ITag eFV;
    public static final ITag eFW;
    public static final ITag eFX;
    public static final ITag eFY;
    public static final ITag eFZ;
    public static final ITag eFa;
    public static final ITag eFb = new a("9f60", TagValueTypeEnum.BINARY, "CVC3 (Track1)", "The CVC3 (Track1) is a 2-byte cryptogram returned by the Card in the response to the COMPUTE CRYPTOGRAPHIC CHECKSUM command.");
    public static final ITag eFc = new a("9f61", TagValueTypeEnum.BINARY, "CVC3 (Track2)", "The CVC3 (Track2) is a 2-byte cryptogram returned by the Card in the response to the COMPUTE CRYPTOGRAPHIC CHECKSUM command.");
    public static final ITag eFd = new a("9f62", TagValueTypeEnum.BINARY, "Track 1 bit map for CVC3", "PCVC3(Track1) indicates to the Kernel the positions in the discretionary data field of the Track 1 Data where the CVC3 (Track1) digits must be copied");
    public static final ITag eFe = new a("9f63", TagValueTypeEnum.BINARY, "Track 1 bit map for UN and ATC", "PUNATC(Track1) indicates to the Kernel the positions in the discretionary data field of Track 1 Data where the Unpredictable Number (Numeric) digits and Application Transaction Counter digits have to be copied.");
    public static final ITag eFf = new a("9f64", TagValueTypeEnum.BINARY, "Track 1 number of ATC digits", "The value of NATC(Track1) represents the number of digits of the Application Transaction Counter to be included in the discretionary data field of Track 1 Data");
    public static final ITag eFg = new a("9f65", TagValueTypeEnum.BINARY, "Track 2 bit map for CVC3", "PCVC3(Track2) indicates to the Kernel the positions in the discretionary data field of the Track 2 Data where the CVC3 (Track2) digits must be copied");
    public static final ITag eFh = new a("9f67", TagValueTypeEnum.BINARY, "Track 2 number of ATC digits", "The value of NATC(Track2) represents the number of digits of the Application Transaction Counter to be included in the discretionary data field of Track 2 Data");
    public static final ITag eFi;
    public static final ITag eFj;
    public static final ITag eFk;
    public static final ITag eFl;
    public static final ITag eFm;
    public static final ITag eFn;
    public static final ITag eFo;
    public static final ITag eFp;
    public static final ITag eFq;
    public static final ITag eFr;
    public static final ITag eFs;
    public static final ITag eFt;
    public static final ITag eFu;
    public static final ITag eFv;
    public static final ITag eFw;
    public static final ITag eFx;
    public static final ITag eFy;
    public static final ITag eFz;
    public static final ITag eGa;
    public static final ITag eGb;
    public static final ITag eGc;
    public static final ITag eGd;
    public static final ITag eGe;
    public static final ITag eGf;
    public static final ITag eGg;
    public static final ITag eGh;
    public static final ITag eGi;
    public static final ITag eGj;
    public static final ITag eGk;
    public static final ITag eGl;
    public static final ITag eGm;
    public static final ITag eGn;
    public static final ITag eGo;
    public static final ITag eGp;
    public static final ITag eGq;
    public static final ITag eGr;
    public static final ITag eGs;
    public static final ITag eGt;
    public static final ITag eGu;
    public static final ITag eGv;
    public static final ITag eGw;
    public static final ITag eGx;
    public static final ITag eGy;

    static {
        String str = "Identifies the application as described in ISO/IEC 7816-5";
        eCo = new a("4f", TagValueTypeEnum.BINARY, "Application Identifier (AID) - card", str);
        String str2 = "";
        eCr = new a("52", TagValueTypeEnum.BINARY, "Command APDU", str2);
        eCs = new a("53", TagValueTypeEnum.BINARY, "Discretionary data (or template)", str2);
        String str3 = "Authorised amount of the transaction (excluding adjustments)";
        eCH = new a("81", TagValueTypeEnum.BINARY, "Amount, Authorised (Binary)", str3);
        String str4 = "Identifies the certification authorityâ€™s public key in conjunction with the RID";
        eCR = new a("8f", TagValueTypeEnum.BINARY, "Certification Authority Public Key Index - card", str4);
        eDt = new a("9f02", TagValueTypeEnum.NUMERIC, "Amount, Authorised (Numeric)", str3);
        str3 = "Secondary amount associated with the transaction representing a cashback amount";
        eDu = new a("9f03", TagValueTypeEnum.NUMERIC, "Amount, Other (Numeric)", str3);
        eDv = new a("9f04", TagValueTypeEnum.NUMERIC, "Amount, Other (Binary)", str3);
        eDx = new a("9f06", TagValueTypeEnum.BINARY, "Application Identifier (AID) - terminal", str);
        str = "Version number assigned by the payment system for the application";
        eDz = new a("9f08", TagValueTypeEnum.BINARY, "Application Version Number - card", str);
        eDA = new a("9f09", TagValueTypeEnum.BINARY, "Application Version Number - terminal", str);
        eDW = new a("9f22", TagValueTypeEnum.BINARY, "Certification Authority Public Key Index - Terminal", str4);
        eEG = new a("df60", TagValueTypeEnum.BINARY, "VISA Log Entry", str2);
        eEK = new a("9f6e", TagValueTypeEnum.BINARY, "Visa Low-Value Payment (VLP) Issuer Authorisation Code", str2);
        eEL = new a("9f29", TagValueTypeEnum.BINARY, "Indicates the card's preference for the kernel on which the contactless application can be processed", str2);
        eEM = new a("9f2a", TagValueTypeEnum.BINARY, "The value to be appended to the ADF Name in the data field of the SELECT command, if the Extended Selection Support flag is present and set to 1", str2);
        str = "?";
        eEO = new a("9f56", TagValueTypeEnum.BINARY, str, str2);
        eEQ = new a("df3e", TagValueTypeEnum.BINARY, str, str2);
        eET = new a("9f53", TagValueTypeEnum.BINARY, "Transaction Category Code", str2);
        eEU = new a("9f54", TagValueTypeEnum.BINARY, "DS ODS Card", str2);
        eEV = new a("9f55", TagValueTypeEnum.BINARY, "Mobile Support Indicator", str2);
        eEW = new a("9f5b", TagValueTypeEnum.BINARY, "DSDOL", str2);
        eEX = new a("9f5c", TagValueTypeEnum.BINARY, "DS Requested Operator ID", str2);
        eFa = new a("9f5f", TagValueTypeEnum.BINARY, "DS Slot Availability", str2);
        eFi = new a("9f69", TagValueTypeEnum.BINARY, "UDOL", str2);
        eFj = new a("9f6a", TagValueTypeEnum.BINARY, "Unpredictable Number (Numeric)", str2);
        eFk = new a("9f6d", TagValueTypeEnum.BINARY, "Mag-stripe Application Version Number (Reader)", str2);
        eFl = new a("9f6f", TagValueTypeEnum.BINARY, "DS Slot Management Control", str2);
        eFm = new a("9f70", TagValueTypeEnum.BINARY, "Protected Data Envelope 1", str2);
        eFn = new a("9f71", TagValueTypeEnum.BINARY, "Protected Data Envelope 2", str2);
        eFo = new a("9f72", TagValueTypeEnum.BINARY, "Protected Data Envelope 3", str2);
        eFp = new a("9f73", TagValueTypeEnum.BINARY, "Protected Data Envelope 4", str2);
        eFq = new a("9f74", TagValueTypeEnum.BINARY, "Protected Data Envelope 5", str2);
        eFr = new a("9f75", TagValueTypeEnum.BINARY, "Unprotected Data Envelope 1", str2);
        eFs = new a("9f76", TagValueTypeEnum.BINARY, "Unprotected Data Envelope 2", str2);
        eFt = new a("9f77", TagValueTypeEnum.BINARY, "Unprotected Data Envelope 3", str2);
        eFu = new a("9f78", TagValueTypeEnum.BINARY, "Unprotected Data Envelope 4", str2);
        eFv = new a("9f79", TagValueTypeEnum.BINARY, "Unprotected Data Envelope 5", str2);
        eFw = new a("9f7c", TagValueTypeEnum.BINARY, "Merchant Custom Data", str2);
        eFx = new a("9f7d", TagValueTypeEnum.BINARY, "DS Summary 1", str2);
        eFy = new a("9f7f", TagValueTypeEnum.BINARY, "DS Unpredictable Number", str2);
        eFz = new a("df4b", TagValueTypeEnum.BINARY, "POS Cardholder Interaction Information", str2);
        eFA = new a("df61", TagValueTypeEnum.BINARY, "DS Digest H", str2);
        eFB = new a("df62", TagValueTypeEnum.BINARY, "DS ODS Info", str2);
        eFC = new a("df63", TagValueTypeEnum.BINARY, "DS ODS Term", str2);
        eFD = new a("df8104", TagValueTypeEnum.BINARY, "Balance Read Before Gen AC", str2);
        eFE = new a("df8105", TagValueTypeEnum.BINARY, "Balance Read After Gen AC", str2);
        eFF = new a("df8106", TagValueTypeEnum.BINARY, "Data Needed", str2);
        eFG = new a("df8107", TagValueTypeEnum.BINARY, "CDOL1 Related Data", str2);
        eFH = new a("df8108", TagValueTypeEnum.BINARY, "DS AC Type", str2);
        eFI = new a("df8109", TagValueTypeEnum.BINARY, "DS Input (Term)", str2);
        eFJ = new a("df810a", TagValueTypeEnum.BINARY, "DS ODS Info For Reader", str2);
        eFK = new a("df810b", TagValueTypeEnum.BINARY, "DS Summary Status", str2);
        eFL = new a("df810c", TagValueTypeEnum.BINARY, "Kernel ID", str2);
        eFM = new a("df810d", TagValueTypeEnum.BINARY, "DSVN Term", str2);
        eFN = new a("df810e", TagValueTypeEnum.BINARY, "Post-Gen AC Put Data Status", str2);
        eFO = new a("df810f", TagValueTypeEnum.BINARY, "Pre-Gen AC Put Data Status", str2);
        eFP = new a("df8110", TagValueTypeEnum.BINARY, "Proceed To First Write Flag", str2);
        eFQ = new a("df8111", TagValueTypeEnum.BINARY, "PDOL Related Data", str2);
        eFR = new a("df8112", TagValueTypeEnum.BINARY, "Tags To Read", str2);
        eFS = new a("df8113", TagValueTypeEnum.BINARY, "DRDOL Related Data", str2);
        eFT = new a("df8114", TagValueTypeEnum.BINARY, "Reference Control Parameter", str2);
        eFU = new a("df8115", TagValueTypeEnum.BINARY, "Error Indication", str2);
        eFV = new a("df8116", TagValueTypeEnum.BINARY, "User Interface Request Data", str2);
        eFW = new a("df8117", TagValueTypeEnum.BINARY, "Card Data Input Capability", str2);
        eFX = new a("df8118", TagValueTypeEnum.BINARY, "CVM Capability - CVM Required", str2);
        eFY = new a("df8119", TagValueTypeEnum.BINARY, "CVM Capability - No CVM Required", str2);
        eFZ = new a("df811a", TagValueTypeEnum.BINARY, "Default UDOL", str2);
        eGa = new a("df811b", TagValueTypeEnum.BINARY, "Kernel Configuration", str2);
        eGb = new a("df811c", TagValueTypeEnum.BINARY, "Max Lifetime of Torn Transaction Log Record", str2);
        eGc = new a("df811d", TagValueTypeEnum.BINARY, "Max Number of Torn Transaction Log Records", str2);
        eGd = new a("df811e", TagValueTypeEnum.BINARY, "Mag-stripe CVM Capability – CVM Required", str2);
        eGe = new a("df811f", TagValueTypeEnum.BINARY, "Security Capability", str2);
        eGf = new a("df8120", TagValueTypeEnum.BINARY, "Terminal Action Code – Default", str2);
        eGg = new a("df8121", TagValueTypeEnum.BINARY, "Terminal Action Code – Denial", str2);
        eGh = new a("df8122", TagValueTypeEnum.BINARY, "Terminal Action Code – Online", str2);
        eGi = new a("df8123", TagValueTypeEnum.BINARY, "Reader Contactless Floor Limit", str2);
        eGj = new a("df8124", TagValueTypeEnum.BINARY, "Reader Contactless Transaction Limit (No On-device CVM)", str2);
        eGk = new a("df8125", TagValueTypeEnum.BINARY, "Reader Contactless Transaction Limit (On-device CVM)", str2);
        eGl = new a("df8126", TagValueTypeEnum.BINARY, "Reader CVM Required Limit", str2);
        eGm = new a("df8127", TagValueTypeEnum.BINARY, "TIME_OUT_VALUE", str2);
        eGn = new a("df8128", TagValueTypeEnum.BINARY, "IDS Status", str2);
        eGo = new a("df8129", TagValueTypeEnum.BINARY, "Outcome Parameter Set", str2);
        eGp = new a("df812a", TagValueTypeEnum.BINARY, "DD Card (Track1)", str2);
        eGq = new a("df812b", TagValueTypeEnum.BINARY, "DD Card (Track2)", str2);
        eGr = new a("df812c", TagValueTypeEnum.BINARY, "Mag-stripe CVM Capability – No CVM Required", str2);
        eGs = new a("df812d", TagValueTypeEnum.BINARY, "Message Hold Time", str2);
        eGt = new a("ff8101", TagValueTypeEnum.BINARY, "Torn Record", str2);
        eGu = new a("ff8102", TagValueTypeEnum.BINARY, "Tags To Write Before Gen AC", str2);
        eGv = new a("ff8103", TagValueTypeEnum.BINARY, "Tags To Write After Gen AC", str2);
        eGw = new a("ff8104", TagValueTypeEnum.BINARY, "Data To Send", str2);
        eGx = new a("ff8105", TagValueTypeEnum.BINARY, "Data Record", str2);
        eGy = new a("ff8106", TagValueTypeEnum.BINARY, "Discretionary Data", str2);
        for (Field field : b.class.getFields()) {
            if (field.getType() == ITag.class) {
                try {
                    a((ITag) field.get(null));
                } catch (IllegalAccessException e) {
                    throw new RuntimeException(e);
                }
            }
        }
    }

    public static ITag D(byte[] bArr) {
        ITag F = F(bArr);
        return F == null ? E(bArr) : F;
    }

    public static ITag E(byte[] bArr) {
        return new a(bArr, TagValueTypeEnum.BINARY, "[UNKNOWN TAG]", "");
    }

    public static ITag F(byte[] bArr) {
        return (ITag) eCk.get(a.C(bArr));
    }

    private static void a(ITag iTag) {
        a C = a.C(iTag.bgx());
        if (eCk.containsKey(C)) {
            StringBuilder stringBuilder = new StringBuilder();
            stringBuilder.append("Tag already added ");
            stringBuilder.append(iTag);
            throw new IllegalArgumentException(stringBuilder.toString());
        }
        eCk.put(C, iTag);
    }

    private b() {
    }
}
